{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/utils/tabCarousel.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// -- Text/Code Fuctions\n// Wrap Letters\nexport const wrapLetters = (element) => {\n  const processNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      // Check if the parent node has the \"letter\" class\n      if (!node.parentNode.classList.contains('letter')) {\n        const codeText = node.textContent;\n        const fragment = document.createDocumentFragment();\n\n        for (let i = 0; i < codeText.length; i++) {\n          const span = document.createElement('span');\n          span.className = 'letter';\n          span.textContent = codeText[i];\n          fragment.appendChild(span);\n        }\n\n        node.parentNode.replaceChild(fragment, node);\n      }\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      if (node.tagName !== 'BR') {\n        const childNodes = Array.from(node.childNodes);\n        childNodes.forEach(processNode);\n      }\n    }\n  };\n\n  $(element)\n    .contents()\n    .each(function () {\n      processNode(this);\n    });\n};\n\nconst revealLetters = (elements, letterDelay) => {\n  const codeTimeline = gsap.timeline(); // create a single timeline for all elements and letters\n\n  let globalLetterIndex = 0; // initialize a global letter index\n  // Iterate over each element passed\n  $(elements).each((elementIndex, element) => {\n    const letters = $(element).find('.letter').not('.line-numbers-row .code-letter');\n    const highlights = $(element).find('.word-highlight');\n\n    // Animate each letter in the current element\n    letters.each((letterIndex, letter) => {\n      codeTimeline.fromTo(\n        letter,\n        { visibility: 'hidden' },\n        { visibility: 'initial' },\n        globalLetterIndex * letterDelay,\n        '<'\n      );\n      globalLetterIndex++; // increment the global letter index\n    });\n    if (highlights.length) {\n      const firstHighlight = highlights[0];\n      const currentBgColor = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('background-color');\n      const currentBoxShadow = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('box-shadow');\n\n      const hexToRGBA = (hex, alpha) => {\n        const [r, g, b] = hex.match(/\\w\\w/g).map((x) => parseInt(x, 16));\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n      };\n\n      const rgbaToTransparent = (rgba) => {\n        const rgbaArray = rgba\n          .replace(/^rgba?\\(/, '')\n          .replace(/\\)$/, '')\n          .split(',');\n        return `rgba(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]}, 0)`;\n      };\n\n      const isHex = (color) => /^#(?:[0-9a-f]{3}){1,2}$/i.test(color);\n\n      const initialBackgroundColor = isHex(currentBgColor)\n        ? hexToRGBA(currentBgColor, 0)\n        : rgbaToTransparent(currentBgColor);\n\n      const initialBoxShadow = currentBoxShadow.replace(/rgba?\\([^)]+\\)/g, (match) => {\n        return isHex(match) ? hexToRGBA(match, 0) : rgbaToTransparent(match);\n      });\n\n      Array.from(highlights).forEach((element) => {\n        element.style.backgroundColor = initialBackgroundColor;\n        element.style.boxShadow = initialBoxShadow;\n      });\n\n      codeTimeline.to(\n        highlights,\n        {\n          backgroundColor: currentBgColor,\n          boxShadow: currentBoxShadow,\n          duration: 0.35,\n        },\n        '<'\n      );\n    }\n  });\n  return codeTimeline;\n};\n\n// --- Text Animations\n// Letter Animation\nexport const letterAnimation = (elements, letterType) => {\n  let letterDelay;\n  if (letterType === 'label') {\n    letterDelay = 0.03;\n  } else if (letterType === 'heading') {\n    letterDelay = 0.01;\n  } else if (typeof letterType === 'number') {\n    letterDelay = letterType;\n  } else {\n    letterDelay = 0.01;\n  }\n  wrapLetters(elements);\n  return revealLetters(elements, letterDelay);\n};\n\n// CodeAnimation\nexport const codeAnimation = (className) => {\n  const codeBlock = $(className).find('code');\n  const lineNumbers = codeBlock.find('.line-numbers-rows').eq(0).clone();\n  codeBlock.find('.line-numbers-rows').remove();\n  wrapLetters(codeBlock);\n  codeBlock.prepend(lineNumbers);\n  return revealLetters(codeBlock, 0.01);\n};\n\n// Typewrite\nexport const typeText = (element, text) => {\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  codeTimeline.to(\n    element,\n    {\n      text: { value: text, ease: 'none', speed: 1 },\n    },\n    '<'\n  );\n  return codeTimeline;\n};\n\n// Code Files Change\nexport const codeFile = (element, index) => {\n  let tl = gsap.timeline();\n\n  let text = index === 0 ? 'PY' : '&#x1F525';\n  tl.set(element, { text: text });\n  return tl;\n};\n\n// ---- Graphs\n// Animate Stats\nconst animateCounter = ($element) => {\n  $($element).each(function () {\n    const Cont = { val: 0 };\n    const originalText = $(this).text();\n    const targetValue = parseFloat(originalText);\n    const isOriginalHalf = originalText % 1 >= 0.5 && originalText % 1 < 1;\n\n    if (!isNaN(targetValue)) {\n      // Hide the element before the animation starts\n      $(this).css('visibility', 'hidden');\n      const onUpdate = () => {\n        let formattedValue;\n\n        if (Math.abs(targetValue - Cont.val) <= 0.01) {\n          formattedValue = targetValue % 1 === 0 ? targetValue.toFixed(0) : targetValue.toFixed(2);\n        } else if (Cont.val >= 1) {\n          formattedValue = Math.floor(Cont.val).toFixed(0);\n        } else {\n          formattedValue = Cont.val.toFixed(2);\n        }\n\n        $(this).text(formattedValue);\n      };\n\n      TweenLite.to(Cont, 1, {\n        val: targetValue,\n        onUpdate: onUpdate,\n        onStart: () => $(this).css('visibility', 'visible'),\n      });\n    } else {\n      return;\n    }\n  });\n};\n// Animate Graph Head\nconst graphHeadAnimation = (graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n  masterTimeline\n    .add(letterAnimation(`.graph${graphClassPrefix}_head .text-size-metadata`), 'label')\n    .add(() => animateCounter(`.graph${graphClassPrefix}_head .graph-number`), '<');\n\n  return masterTimeline;\n};\n\n// Graphs Inner Animations\nconst animateGraphRow = (targets, graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n\n  $(targets).each(function (index) {\n    let row = $(this).find(`.graph${graphClassPrefix}_box`);\n    let label = $(this).find(`.graph${graphClassPrefix}_label div`);\n    let number = $(this).find(`.graph${graphClassPrefix}_row-num div`);\n\n    const codeTimeline = gsap.timeline();\n\n    codeTimeline\n      .from(row, { scaleX: 0, duration: 1 })\n      // Show the number element and call animateCounter\n      .add(() => {\n        animateCounter(number);\n      }, '<')\n      .add(letterAnimation(label, 'label'));\n\n    // Stagger animations using the add() method\n    masterTimeline.add(codeTimeline, index * 0.2);\n  });\n\n  return masterTimeline;\n};\n\nconst animateGraphChart = (target) => {\n  let tl = gsap.timeline();\n\n  tl.fromTo(\n    target,\n    {\n      scaleY: 0,\n    },\n    { scaleY: 1, duration: 1 },\n    '<'\n  );\n};\n\n// Graph Types Animations\nexport const animateHorizontalGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(animateGraphRow(target, graphType), '<');\n\n  return tl;\n};\n\nexport const animateChartGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let labelDot = $(trigger).find('.graphd_legend-dot');\n  let chart = $(target).find('.graph-charts');\n\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(letterAnimation(labels, 'label'), '<')\n    .add(animateGraphChart(chart), '<')\n    .fromTo(labelDot, { scale: 0.5, opacity: 0 }, { scale: 1, opacity: 1 }, '<');\n\n  return tl;\n};\n\nexport const animateBoxGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let box = $(target).find('.graphc_item');\n  tl.add(graphHeadAnimation(graphType));\n  tl.fromTo(\n    box,\n    {\n      scale: 0,\n      opacity: 0,\n    },\n    {\n      scale: 1,\n      opacity: 1,\n      stagger: 0.2,\n    }\n  ).add(letterAnimation(labels, 'label'));\n\n  return tl;\n};\n", "// Sets up a carousel given tabs, card, and some functions to run on leave and enter.\n// Only starts the carousel when the first tab scrolls into view.\nexport function tabCarousel({ tabs, cards, onCardLeave, onTabLeave, onCardShow, onTabShow }) {\n  if (tabs.length !== cards.length) {\n    throw new Error(`Cards length: ${cards.length} did not match tabs length: ${tabs.length}`);\n  }\n\n  let hasManuallyClicked = false;\n  let curIdx = 0;\n\n  async function showCard(curIdx) {\n    const prevCardIdx = curIdx === 0 ? cards.length - 1 : curIdx - 1;\n\n    await Promise.all([onCardLeave(cards.eq(prevCardIdx)), onTabLeave(tabs.eq(prevCardIdx))]);\n\n    // Wait until the previous card and tab are hidden before moving to the next one.\n    await Promise.all([onCardShow(cards.eq(curIdx)), onTabShow(tabs.eq(curIdx))]);\n  }\n\n  async function startAnimation() {\n    while (!hasManuallyClicked) {\n      await showCard(curIdx);\n      curIdx += 1;\n      if (curIdx === cards.length) {\n        curIdx = 0;\n      }\n    }\n  }\n\n  tabs.each((idx, tabEl) => {\n    tabEl.onclick = () => {\n      // Don't wait for promises to resolve, do everything simultaneously.\n      onCardLeave(cards.eq(curIdx));\n      onTabLeave(tabs.eq(curIdx));\n      onCardShow(cards.eq(idx));\n      onTabShow(tabs.eq(idx));\n      hasManuallyClicked = true;\n      curIdx = idx;\n    };\n  });\n\n  // Wait for scroll into view before you show the animation\n  const intersectionObserver = new IntersectionObserver(\n    (entries) => {\n      if (entries[0].intersectionRatio <= 0) return;\n      startAnimation();\n      intersectionObserver.unobserve(tabs[0]);\n    },\n    { threshold: 1.0 }\n  );\n  intersectionObserver.observe(tabs[0]);\n}\n\n// Uses swiper to make a carousel. Used as the mobile version of the carousel.\nexport function swiperCarousel({ animateOnSlide, sliderSelector, onInit, duration }) {\n  function handleSwiperSlide({ activeIndex, slides }) {\n    if (slides.length === 0) {\n      return;\n    }\n    animateOnSlide($(slides[activeIndex]));\n  }\n\n  new Swiper(sliderSelector, {\n    slidesPerView: 1,\n    spaceBetween: 24,\n    speed: 250,\n    autoplay: {\n      delay: duration,\n    },\n    observer: true,\n    on: {\n      init: (swiperInstance) => {\n        onInit();\n        handleSwiperSlide(swiperInstance);\n      },\n      transitionEnd: (swiperInstance) => {\n        handleSwiperSlide(swiperInstance);\n      },\n    },\n    pagination: {\n      el: '.swiper-navigation',\n      type: 'bullets',\n      clickable: true,\n      bulletActiveClass: 'w-active',\n      bulletClass: 'w-slider-dot',\n    },\n  });\n}\n", "import { codeAnimation, letterAnimation, typeText } from '$utils/globalFunctions';\nimport { swiperCarousel, tabCarousel } from '$utils/tabCarousel';\n\ndocument.documentElement.classList.add('js-enabled');\n\n$(document).ready(function () {\n  // Register GSAP\n  gsap.registerPlugin(ScrollTrigger);\n\n  // Team has many images and does not appear to have problems when this is removed.\n  if (window.location.pathname !== '/team') {\n    // GSAP IMG SET\n    $('img').each(function () {\n      $(this).removeAttr('loading');\n      ScrollTrigger.refresh();\n    });\n  }\n\n  // RemoveScrollBar for all overflow elements\n  function addNoScrollbarClass() {\n    const allElements = document.querySelectorAll('*');\n\n    for (const element of allElements) {\n      // Exclude body and html elements\n      if (element.tagName.toLowerCase() === 'body' || element.tagName.toLowerCase() === 'html') {\n        continue;\n      }\n\n      const style = window.getComputedStyle(element);\n      if (\n        style.overflow === 'auto' ||\n        style.overflow === 'scroll' ||\n        style.overflowX === 'auto' ||\n        style.overflowX === 'scroll' ||\n        style.overflowY === 'auto' ||\n        style.overflowY === 'scroll'\n      ) {\n        // Disable Scrollbar\n        element.classList.add('no-scrollbar');\n        // Fix for inner scroll inside swipers\n        element.classList.add('swiper-no-swiping');\n      }\n    }\n  }\n  addNoScrollbarClass();\n\n  // -- Lines Animation\n  let lineMaskTriggers = [];\n  function setupLineMaskScrollTriggers() {\n    // Kill existing line mask triggers before setting up new ones\n    lineMaskTriggers.forEach((st) => st.kill());\n    lineMaskTriggers = [];\n    $('.line-mask').attr('style', '');\n\n    $('.line-mask').each(function () {\n      const computedStyle = window.getComputedStyle($(this)[0]);\n      const originalHeight = computedStyle.getPropertyValue('height');\n\n      if ($(this).closest('.line-mask_wrap').hasClass('bottom')) {\n        gsap.set($(this), { height: '0%' });\n      } else {\n        gsap.set($(this), { height: '100%' });\n      }\n\n      const scrollTrigger = ScrollTrigger.create({\n        trigger: $(this).closest('.line-mask_wrap'),\n        once: true,\n        start: '70% bottom',\n        invalidateOnRefresh: true,\n        onEnter: () => {\n          gsap.to($(this), { height: originalHeight, duration: 1.2 });\n        },\n      });\n\n      // Add the ScrollTrigger instance to the lineMaskTriggers array\n      lineMaskTriggers.push(scrollTrigger);\n    });\n  }\n  function debounce(func, wait) {\n    let timeout;\n    return function () {\n      const context = this,\n        args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  // Set up the ScrollTriggers on window resize, debounce the handler with 250ms delay\n  let lastWindowWidth = $(window).width();\n  setTimeout(() => {\n    setupLineMaskScrollTriggers();\n  }, 500);\n  $(window).on(\n    'resize',\n    debounce(() => {\n      const currentWindowWidth = $(window).width();\n\n      if (currentWindowWidth !== lastWindowWidth) {\n        setupLineMaskScrollTriggers();\n        lastWindowWidth = currentWindowWidth;\n      }\n    }, 250)\n  );\n\n  // -- Code Blocks Animations to view\n  $('.dashboard_inner[code-animation]').each(function () {\n    const codeBlock = $(this).find('.dashboard_code-block');\n    codeBlock.hide();\n\n    ScrollTrigger.create({\n      trigger: $(this),\n      once: true,\n      start: '50% bottom',\n      invalidateOnRefresh: true,\n      toggleActions: 'play null null null',\n      onEnter: () => {\n        codeBlock.show();\n        codeAnimation($(this));\n      },\n    });\n  });\n\n  // -- CTA Animation\n  $('#ctaBox').each(function () {\n    let label = $(this).find('#ctaLabel');\n    let text = $(this).find('#ctaText');\n    let triggerElement = $(this);\n    let tl = gsap.timeline({\n      ease: Power2.easeOut,\n      paused: true,\n      scrollTrigger: {\n        trigger: triggerElement,\n        // trigger element - viewport\n        start: 'center bottom',\n        onEnter: () => {\n          // Play the timeline when the trigger element enters the viewport\n          tl.play();\n        },\n      },\n    });\n    tl.add(letterAnimation(label)).add(letterAnimation(text));\n  });\n\n  // -- Menu\n\n  // Base\n  var menuOpenAnim = false;\n  var dropdownOpen = false;\n  const menuLinks = '.navbar_part.links';\n  const menuLinksItems = '.navbar_link';\n  const menuButton = '.navbar_menu-btn';\n\n  // Menu Animation\n  let menuText = 'Close';\n  function createNavReveal() {\n    let navReveal = gsap\n      .timeline({\n        paused: true,\n        onComplete: () => {\n          disableScroll();\n        },\n      })\n      .add(typeText(menuButton + ' div', () => menuText)) // Use a function that returns menuText value\n      .fromTo(menuLinks, { display: 'none' }, { display: 'flex' }, '<')\n      .fromTo(menuLinks, { yPercent: -100 }, { yPercent: 0 }, '<')\n      .fromTo(\n        menuLinksItems,\n        {\n          y: '100%',\n          opacity: 0,\n        },\n        {\n          y: '0%',\n          opacity: 1,\n          stagger: {\n            each: 0.05,\n          },\n        },\n        '-=0.2'\n      )\n      .fromTo($('.navbar_buttons-respo .button'), { opacity: 0 }, { opacity: 1, stagger: 0.2 })\n      .fromTo(menuLinksItems, { pointerEvents: 'none' }, { pointerEvents: 'auto' }, '<');\n    return navReveal;\n  }\n\n  // Scroll Disabler\n  let scrollPosition;\n  const disableScroll = () => {\n    if (!menuOpenAnim) {\n      scrollPosition = $(window).scrollTop();\n      $('html, body').scrollTop(0).addClass('overflow-hidden');\n    } else {\n      $('html, body').scrollTop(scrollPosition).removeClass('overflow-hidden');\n    }\n    menuOpenAnim = !menuOpenAnim;\n  };\n\n  let navReveal;\n\n  // GSAP's matchMedia\n  ScrollTrigger.matchMedia({\n    '(max-width: 991px)': function () {\n      // Apply the animation only on screens with a max-width of 991px\n      navReveal = createNavReveal();\n    },\n  });\n\n  // Actions\n  // Open on Click\n  $('.navbar_menu-btn').on('click', openMenu);\n\n  // Functions\n  function openMenu() {\n    if (navReveal) {\n      playMenuAnimation();\n    }\n  }\n\n  function playMenuAnimation() {\n    updateMenuText();\n\n    if (!menuOpenAnim) {\n      $('.navbar_menu-btn').addClass('open');\n      navReveal.timeScale(1).play();\n    } else {\n      $('.navbar_menu-btn').removeClass('open');\n      navReveal.timeScale(1.5).reverse();\n      disableScroll();\n    }\n  }\n\n  function updateMenuText() {\n    menuText = menuOpenAnim ? 'Menu' : 'Close';\n  }\n\n  // Menu Dropdown Animation\n  const dropdowns = $('.navbar_dropdown');\n  const dropdownInner = $('.navbar_dropdown-inner');\n  const dropdownLinks = $('.navbar_dropdown-link-list');\n  const movingDiv = $('.navbar_dropdown-bg');\n  let lastIndex;\n  let divIsActive;\n  let leaeveDropdown;\n  let duration = 0.5;\n\n  const setInitialStyles = (element, rect, centerX) => {\n    movingDiv.fadeIn();\n    divIsActive = true;\n    gsap.set(movingDiv, {\n      top: `${rect.top}px`,\n      left: `${rect.left}px`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`,\n    });\n  };\n\n  const hideMovingDiv = () => {\n    const tl = gsap.timeline({ defaults: { ease: Circ.easeOut } });\n    tl.to(movingDiv, { duration: duration, autoAlpha: 0 });\n    divIsActive = false;\n    return tl;\n  };\n\n  const animateMovingDiv = (element, rect, duration, direction) => {\n    let subLinks = $(element).find(dropdownLinks);\n    let subMain = $(element).find('.navbar_dropdown-main');\n    console.log(subMain);\n    const tl = gsap.timeline({ defaults: { ease: 'circ.out' } });\n    tl.to(movingDiv, {\n      top: `${rect.top}px`,\n      left: `${rect.left}px`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`,\n      autoAlpha: divIsActive ? 1 : 0,\n      duration: duration,\n      delay: 0.2,\n    });\n    tl.to($(element).find(dropdownInner), { opacity: 1, duration: 0.2 }, '<0.05');\n    tl.add(animateLinks(subLinks.add(subMain), direction), '<');\n    return tl;\n  };\n\n  const animateLinks = (links, direction, duration) => {\n    const xPercent = direction === 'left' ? -5 : 5;\n    const tl = gsap.timeline({ defaults: { ease: 'circ.out' } });\n    return tl.fromTo(links, { xPercent: xPercent }, { xPercent: 0, duration: 0.4 });\n  };\n\n  const moveDiv = (element) => {\n    gsap.killTweensOf(movingDiv);\n\n    let submenu = $(element).find(dropdownInner)[0];\n    let rect = submenu.getBoundingClientRect();\n    let rectX = element.getBoundingClientRect();\n    let centerX = rectX.width / 2;\n    let direction;\n\n    if (!divIsActive) {\n      setInitialStyles(element, rect, centerX);\n    }\n\n    if (lastIndex < $(element).index()) {\n      direction = 'right';\n    } else if (lastIndex > $(element).index()) {\n      direction = 'left';\n    }\n\n    const movingDivTimeline = animateMovingDiv(element, rect, duration, direction);\n\n    lastIndex = $(element).index();\n  };\n\n  // Events\n  var dropdownTimeout;\n\n  dropdowns.on('mouseenter', function () {\n    if ($(window).width() > 991) {\n      clearTimeout(dropdownTimeout); // Clear any existing timeout\n      moveDiv(this);\n    }\n  });\n\n  dropdowns.on('mouseleave', function () {\n    if ($(window).width() > 991) {\n      gsap.killTweensOf(movingDiv);\n      gsap.to($(this).find(dropdownInner), { opacity: 0 });\n      dropdownTimeout = setTimeout(function () {\n        hideMovingDiv();\n      }, 50);\n    }\n  });\n\n  if ($('.tabs.max-tab').length) {\n    const activeClass = 'tab-active';\n    const progressLine = '.tabs_block-progress-line';\n    const duration = 4000;\n\n    // Animates a card, by typing the text and filename.\n    function cardAnimation(card) {\n      return new Promise((resolve) => {\n        card.addClass('active');\n        resolve();\n      });\n    }\n    // TABS 2\n    tabCarousel({\n      tabs: $('.tabs.max-tab .tabs_block-link-menu .tabs_block-link'),\n      cards: $('.tabs.max-tab .max-products .max-products_grid-cell'),\n      onCardLeave: (card) => {\n        card.removeClass('active');\n      },\n      onTabLeave: (tab) => {\n        tab.removeClass(activeClass);\n        // If this is called mid animation (by a click) this will stop it.\n        tab.find(progressLine).stop();\n        tab.find(progressLine).css('width', '0');\n      },\n      onCardShow: cardAnimation,\n      onTabShow: (tab) => {\n        return new Promise((resolve) => {\n          tab.addClass(activeClass);\n          tab.find(progressLine).animate({ width: '100%' }, duration, resolve);\n        });\n      },\n    });\n\n    swiperCarousel({\n      sliderSelector: '.tabs_slider.max-tab',\n      // On init and when the swiper slides, we animate the progressbar and code\n      // block, but only animate the code the first time it's shown.\n      animateOnSlide(activeSlide) {\n        // Set progressLine to 0 and then start an animation for it.\n\n        activeSlide\n          .find(progressLine)\n          .stop(true, true)\n          .css('width', '0')\n          .animate({ width: '100%' }, duration);\n\n        let cards = $('.tabs_slider.max-tab .max-products .max-products_grid-cell');\n\n        cards.removeClass('active');\n        cards.eq(activeSlide.index()).addClass('active');\n      },\n      onInit() {},\n      duration,\n    });\n  }\n});\n"],
  "mappings": "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",
  "names": ["element", "curIdx", "navReveal", "duration", "cardAnimation"]
}
