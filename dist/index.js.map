{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// -- Text/Code Fuctions\n\n// Wrap Letters\nexport const wrapLetters = (element) => {\n  const processNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      const codeText = node.textContent;\n      const fragment = document.createDocumentFragment();\n\n      for (let i = 0; i < codeText.length; i++) {\n        const span = document.createElement('span');\n        span.className = 'letter';\n        span.textContent = codeText[i];\n        fragment.appendChild(span);\n      }\n\n      node.parentNode.replaceChild(fragment, node);\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      if (node.tagName !== 'BR') {\n        const childNodes = Array.from(node.childNodes);\n        childNodes.forEach(processNode);\n      }\n    }\n  };\n\n  $(element)\n    .contents()\n    .each(function () {\n      processNode(this);\n    });\n};\n\nconst revealLetters = (elements) => {\n  let letters = $(elements).find('.letter').not('.line-numbers-row .code-letter');\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  letters.each((index, element) => {\n    const wordHighlight = $(element).closest('.word-highlight');\n    if (wordHighlight.length) {\n      codeTimeline\n        .fromTo(\n          element,\n          { display: 'none' }, // from value\n          { display: 'inline' }, // to value\n          index * 0.01 // delay\n        )\n        .to(wordHighlight, { opacity: 1, duration: 0.2 }, '<');\n    } else {\n      codeTimeline.fromTo(\n        element,\n        { visibility: 'hidden' }, // from value\n        { visibility: 'initial' }, // to value\n        index * 0.01 // delay\n      );\n    }\n  });\n  return codeTimeline;\n};\n\n// --- Text Animations\n// Letter Animation\nexport const letterAnimation = (elements) => {\n  wrapLetters(elements);\n  return revealLetters(elements);\n};\n\n// CodeAnimation\nexport const codeAnimation = (className) => {\n  const codeBlock = $(className).find('code');\n  const lineNumbers = codeBlock.find('.line-numbers-rows').eq(0).clone();\n  codeBlock.find('.line-numbers-rows').remove();\n  wrapLetters(codeBlock);\n  codeBlock.prepend(lineNumbers);\n  return revealLetters(codeBlock);\n};\n\n// Typewrite\nexport const typeText = (element, text) => {\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  codeTimeline.to(element, {\n    text: { value: text, ease: 'none', speed: 1 },\n  });\n  return codeTimeline;\n};\n\n// ---- Graphs\n// Animate Stats\nexport const animateCounter = ($element) => {\n  const Cont = { val: 0 };\n  const targetValue = parseFloat($element.text());\n\n  const onUpdate = () => {\n    const formattedValue = Cont.val % 1 === 0 ? Cont.val.toFixed(0) : Cont.val.toFixed(1);\n    $element.text(formattedValue);\n  };\n\n  TweenLite.to(Cont, 1, {\n    val: targetValue,\n    onUpdate: onUpdate,\n  });\n};\n\nexport const animateGraphRow = (targets) => {\n  const masterTimeline = gsap.timeline();\n\n  $(targets).each(function (index) {\n    let row = $(this).find('.grapha_box');\n    let label = $(this).find('.grapha_label div');\n    let number = $(this).find('.grapha_row-num div');\n\n    const codeTimeline = gsap.timeline();\n\n    codeTimeline\n      .from(row, { scaleX: 0, duration: 1 })\n      .add(letterAnimation(label))\n      .add(animateCounter(number));\n\n    // Stagger animations using the add() method\n    masterTimeline.add(codeTimeline, index * 0.2);\n  });\n\n  return masterTimeline;\n};\n\nexport const animateHorizontalGraph = (target, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      // trigger element - viewport\n      start: '50% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n  // Add the animation to the timeline\n  tl.add(animateGraphRow(target));\n\n  return tl;\n};\n", "import { codeAnimation, letterAnimation, typeText } from '$utils/globalFunctions';\n\n$(document).ready(function () {\n  gsap.registerPlugin(ScrollTrigger);\n\n  // GSAP IMG SET\n  $('img').each(function () {\n    $(this).removeAttr('loading');\n    ScrollTrigger.refresh();\n  });\n\n  // -- Lines Animation\n  let lineMaskTriggers = [];\n\n  function setupLineMaskScrollTriggers() {\n    // Kill existing line mask triggers before setting up new ones\n    lineMaskTriggers.forEach((st) => st.kill());\n    lineMaskTriggers = [];\n    $('.line-mask').attr('style', '');\n\n    $('.line-mask').each(function () {\n      const computedStyle = window.getComputedStyle($(this)[0]);\n      const originalHeight = computedStyle.getPropertyValue('height');\n\n      gsap.set($(this), { height: '100%' });\n\n      const scrollTrigger = ScrollTrigger.create({\n        trigger: $(this).closest('.line-mask_wrap'),\n        once: true,\n        start: 'center bottom',\n        invalidateOnRefresh: true,\n        onEnter: () => {\n          gsap.to($(this), { height: originalHeight, duration: 1.2 });\n        },\n      });\n\n      // Add the ScrollTrigger instance to the lineMaskTriggers array\n      lineMaskTriggers.push(scrollTrigger);\n    });\n  }\n\n  // Set up the ScrollTriggers on page load\n  setupLineMaskScrollTriggers();\n\n  // Debounce function to limit function calls\n  function debounce(func, wait) {\n    let timeout;\n    return function () {\n      const context = this,\n        args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  // Set up the ScrollTriggers on window resize, debounce the handler with 250ms delay\n  let lastWindowWidth = $(window).width();\n\n  $(window).on(\n    'resize',\n    debounce(() => {\n      const currentWindowWidth = $(window).width();\n\n      if (currentWindowWidth !== lastWindowWidth) {\n        setupLineMaskScrollTriggers();\n        lastWindowWidth = currentWindowWidth;\n      }\n    }, 250)\n  );\n\n  // -- Code Blocks Animations to view\n  $('.dashboard_inner[code-animation]').each(function () {\n    const codeBlock = $(this).find('.dashboard_code-block');\n    codeBlock.hide();\n\n    ScrollTrigger.create({\n      trigger: $(this),\n      once: true,\n      start: '50% bottom',\n      invalidateOnRefresh: true,\n      toggleActions: 'play null null null',\n      onEnter: () => {\n        codeBlock.show();\n        codeAnimation($(this));\n      },\n    });\n  });\n\n  // -- CTA Animation\n  $('#ctaBox').each(function () {\n    let label = $(this).find('#ctaLabel');\n    let text = $(this).find('#ctaText');\n    let triggerElement = $(this);\n    let tl = gsap.timeline({\n      ease: Power2.easeOut,\n      paused: true,\n      scrollTrigger: {\n        trigger: triggerElement,\n        // trigger element - viewport\n        start: 'center bottom',\n        onEnter: () => {\n          // Play the timeline when the trigger element enters the viewport\n          tl.play();\n        },\n      },\n    });\n    tl.add(letterAnimation(label)).add(letterAnimation(text));\n  });\n\n  // -- Menu\n\n  // Base\n  var menuOpenAnim = false;\n  const menuLinks = '.navbar_part.links';\n  const menuLinksItems = '.navbar_link';\n  const menuButton = '.navbar_menu-btn';\n\n  // Variable Anim\n  let revealAnim = {\n    y: '100%',\n    opacity: 0,\n    stagger: {\n      each: 0.05,\n    },\n  };\n\n  // Menu Animation\n  let menuText = 'Close';\n  let navReveal = gsap\n    .timeline()\n    .call(function () {\n      menuOpenAnim = false;\n    })\n    .add(typeText(menuButton + ' div', () => menuText)) // Use a function that returns menuText value\n    .fromTo(menuLinks, { display: 'none' }, { display: 'flex' }, '<')\n    .fromTo(menuLinks, { yPercent: -100 }, { yPercent: 0 }, '<')\n    .from(menuLinksItems, revealAnim, '-=0.2')\n    .fromTo(menuLinksItems, { pointerEvents: 'none' }, { pointerEvents: 'auto' })\n    .call(function () {\n      menuOpenAnim = true;\n    });\n\n  // Define Master Timeline\n  let menuAnimation = gsap.timeline({ paused: true });\n  menuAnimation.add(navReveal, '<');\n\n  // Actionss\n  // Open on Click\n  $('.navbar_menu-btn').on('click', openMenu);\n\n  // Functions\n  function openMenu() {\n    playMenuAnimation();\n  }\n  function updateMenuText() {\n    menuText = menuOpenAnim ? 'Menu' : 'Close';\n  }\n\n  function playMenuAnimation() {\n    updateMenuText();\n    if (!menuOpenAnim) {\n      menuAnimation.timeScale(1).play();\n    } else {\n      menuAnimation.timeScale(1.5).reverse();\n    }\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
