{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/formFunctions.js", "../src/get-started-flows.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Function to handle checkbox clicks\nfunction handleCheckboxClick() {\n  $('.hs-form-checkbox').on('click', function () {\n    if ($(this).find('input[type=checkbox]').is(':checked')) {\n      $(this).find('label').addClass('active');\n    } else {\n      $(this).find('label').removeClass('active');\n    }\n  });\n}\n\n// Function to handle radio button changes\nfunction handleRadioButtonChange() {\n  $('.hs-form-radio').on('change', function () {\n    // First, remove the 'active' class from all radio buttons with the same name\n    let radioGroup = $(this).find('input[type=radio]').attr('name');\n    let radioButtons = $('input[name=\"' + radioGroup.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n    radioButtons.closest('label').removeClass('active');\n\n    // Then, add the 'active' class to the selected radio button\n    if ($(this).find('input[type=radio]').is(':checked')) {\n      $(this).find('label').addClass('active');\n    }\n  });\n}\n\n// Function to initialize custom select elements\nfunction handleSelectChange() {\n  $('select').niceSelect();\n  $('.nice-select li').on('click', function () {\n    $('.nice-select .current').css('color', '#020c13');\n  });\n}\n\nexport const handleCustomStyles = () => {\n  handleCheckboxClick();\n  handleRadioButtonChange();\n  handleSelectChange();\n};\n", "import { handleCustomStyles } from '$utils/formFunctions';\nconsole.log(formID);\nhbspt.forms.create({\n  region: 'na1',\n  portalId: '24141518',\n  formId: formID,\n  target: '#form-container',\n  onFormReady: function (form) {\n    // Handle Custom Styles\n    handleCustomStyles();\n\n    // Check for \"email\" query parameter\n    const urlParams = new URLSearchParams(window.location.search);\n    const email = urlParams.get('email');\n\n    if (email) {\n      // Find the input field with name=\"email\" inside the form\n      const emailInput = document.querySelector('input[name=\"email\"]');\n\n      if (emailInput) {\n        // Set the value of the input field to the email query parameter\n        emailInput.value = email;\n      }\n    }\n  },\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,WAAS,sBAAsB;AAC7B,MAAE,mBAAmB,EAAE,GAAG,SAAS,WAAY;AAC7C,UAAI,EAAE,IAAI,EAAE,KAAK,sBAAsB,EAAE,GAAG,UAAU,GAAG;AACvD,UAAE,IAAI,EAAE,KAAK,OAAO,EAAE,SAAS,QAAQ;AAAA,MACzC,OAAO;AACL,UAAE,IAAI,EAAE,KAAK,OAAO,EAAE,YAAY,QAAQ;AAAA,MAC5C;AAAA,IACF,CAAC;AAAA,EACH;AAGA,WAAS,0BAA0B;AACjC,MAAE,gBAAgB,EAAE,GAAG,UAAU,WAAY;AAE3C,UAAI,aAAa,EAAE,IAAI,EAAE,KAAK,mBAAmB,EAAE,KAAK,MAAM;AAC9D,UAAI,eAAe,EAAE,iBAAiB,WAAW,QAAQ,yBAAyB,MAAM,CAAC;AACzF,mBAAa,QAAQ,OAAO,EAAE,YAAY,QAAQ;AAGlD,UAAI,EAAE,IAAI,EAAE,KAAK,mBAAmB,EAAE,GAAG,UAAU,GAAG;AACpD,UAAE,IAAI,EAAE,KAAK,OAAO,EAAE,SAAS,QAAQ;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AAGA,WAAS,qBAAqB;AAC5B,MAAE,QAAQ,EAAE,WAAW;AACvB,MAAE,iBAAiB,EAAE,GAAG,SAAS,WAAY;AAC3C,QAAE,uBAAuB,EAAE,IAAI,SAAS,SAAS;AAAA,IACnD,CAAC;AAAA,EACH;AAEO,MAAM,qBAAqB,MAAM;AACtC,wBAAoB;AACpB,4BAAwB;AACxB,uBAAmB;AAAA,EACrB;;;ACrCA,UAAQ,IAAI,MAAM;AAClB,QAAM,MAAM,OAAO;AAAA,IACjB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,aAAa,SAAU,MAAM;AAE3B,yBAAmB;AAGnB,YAAM,YAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAC5D,YAAM,QAAQ,UAAU,IAAI,OAAO;AAEnC,UAAI,OAAO;AAET,cAAM,aAAa,SAAS,cAAc,qBAAqB;AAE/D,YAAI,YAAY;AAEd,qBAAW,QAAQ;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;",
  "names": []
}
