{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/utils/tabCarousel.js", "../src/homepage-new.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// -- Text/Code Fuctions\n// Wrap Letters\nexport const wrapLetters = (element) => {\n  const processNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      // Check if the parent node has the \"letter\" class\n      if (!node.parentNode.classList.contains('letter')) {\n        const codeText = node.textContent;\n        const fragment = document.createDocumentFragment();\n\n        for (let i = 0; i < codeText.length; i++) {\n          const span = document.createElement('span');\n          span.className = 'letter';\n          span.textContent = codeText[i];\n          fragment.appendChild(span);\n        }\n\n        node.parentNode.replaceChild(fragment, node);\n      }\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      if (node.tagName !== 'BR') {\n        const childNodes = Array.from(node.childNodes);\n        childNodes.forEach(processNode);\n      }\n    }\n  };\n\n  $(element)\n    .contents()\n    .each(function () {\n      processNode(this);\n    });\n};\n\nconst revealLetters = (elements, letterDelay) => {\n  const codeTimeline = gsap.timeline(); // create a single timeline for all elements and letters\n\n  let globalLetterIndex = 0; // initialize a global letter index\n  // Iterate over each element passed\n  $(elements).each((elementIndex, element) => {\n    const letters = $(element).find('.letter').not('.line-numbers-row .code-letter');\n    const highlights = $(element).find('.word-highlight');\n\n    // Animate each letter in the current element\n    letters.each((letterIndex, letter) => {\n      codeTimeline.fromTo(\n        letter,\n        { visibility: 'hidden' },\n        { visibility: 'initial' },\n        globalLetterIndex * letterDelay,\n        '<'\n      );\n      globalLetterIndex++; // increment the global letter index\n    });\n    if (highlights.length) {\n      const firstHighlight = highlights[0];\n      const currentBgColor = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('background-color');\n      const currentBoxShadow = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('box-shadow');\n\n      const hexToRGBA = (hex, alpha) => {\n        const [r, g, b] = hex.match(/\\w\\w/g).map((x) => parseInt(x, 16));\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n      };\n\n      const rgbaToTransparent = (rgba) => {\n        const rgbaArray = rgba\n          .replace(/^rgba?\\(/, '')\n          .replace(/\\)$/, '')\n          .split(',');\n        return `rgba(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]}, 0)`;\n      };\n\n      const isHex = (color) => /^#(?:[0-9a-f]{3}){1,2}$/i.test(color);\n\n      const initialBackgroundColor = isHex(currentBgColor)\n        ? hexToRGBA(currentBgColor, 0)\n        : rgbaToTransparent(currentBgColor);\n\n      const initialBoxShadow = currentBoxShadow.replace(/rgba?\\([^)]+\\)/g, (match) => {\n        return isHex(match) ? hexToRGBA(match, 0) : rgbaToTransparent(match);\n      });\n\n      Array.from(highlights).forEach((element) => {\n        element.style.backgroundColor = initialBackgroundColor;\n        element.style.boxShadow = initialBoxShadow;\n      });\n\n      codeTimeline.to(\n        highlights,\n        {\n          backgroundColor: currentBgColor,\n          boxShadow: currentBoxShadow,\n          duration: 0.35,\n        },\n        '<'\n      );\n    }\n  });\n  return codeTimeline;\n};\n\n// --- Text Animations\n// Letter Animation\nexport const letterAnimation = (elements, letterType) => {\n  let letterDelay;\n  if (letterType === 'label') {\n    letterDelay = 0.03;\n  } else if (letterType === 'heading') {\n    letterDelay = 0.01;\n  } else if (typeof letterType === 'number') {\n    letterDelay = letterType;\n  } else {\n    letterDelay = 0.01;\n  }\n  wrapLetters(elements);\n  return revealLetters(elements, letterDelay);\n};\n\n// CodeAnimation\nexport const codeAnimation = (className) => {\n  const codeBlock = $(className).find('code');\n  const lineNumbers = codeBlock.find('.line-numbers-rows').eq(0).clone();\n  codeBlock.find('.line-numbers-rows').remove();\n  wrapLetters(codeBlock);\n  codeBlock.prepend(lineNumbers);\n  return revealLetters(codeBlock, 0.01);\n};\n\n// Typewrite\nexport const typeText = (element, text) => {\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  codeTimeline.to(\n    element,\n    {\n      text: { value: text, ease: 'none', speed: 1 },\n    },\n    '<'\n  );\n  return codeTimeline;\n};\n\n// Code Files Change\nexport const codeFile = (element, index) => {\n  let tl = gsap.timeline();\n\n  let text = index === 0 ? 'PY' : '&#x1F525';\n  tl.set(element, { text: text });\n  return tl;\n};\n\n// ---- Graphs\n// Animate Stats\nconst animateCounter = ($element) => {\n  $($element).each(function () {\n    const Cont = { val: 0 };\n    const originalText = $(this).text();\n    const targetValue = parseFloat(originalText);\n    const isOriginalHalf = originalText % 1 >= 0.5 && originalText % 1 < 1;\n\n    if (!isNaN(targetValue)) {\n      // Hide the element before the animation starts\n      $(this).css('visibility', 'hidden');\n      const onUpdate = () => {\n        let formattedValue;\n\n        if (Math.abs(targetValue - Cont.val) <= 0.01) {\n          formattedValue = targetValue % 1 === 0 ? targetValue.toFixed(0) : targetValue.toFixed(2);\n        } else if (Cont.val >= 1) {\n          formattedValue = Math.floor(Cont.val).toFixed(0);\n        } else {\n          formattedValue = Cont.val.toFixed(2);\n        }\n\n        $(this).text(formattedValue);\n      };\n\n      TweenLite.to(Cont, 1, {\n        val: targetValue,\n        onUpdate: onUpdate,\n        onStart: () => $(this).css('visibility', 'visible'),\n      });\n    } else {\n      return;\n    }\n  });\n};\n// Animate Graph Head\nconst graphHeadAnimation = (graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n  masterTimeline\n    .add(letterAnimation(`.graph${graphClassPrefix}_head .text-size-metadata`), 'label')\n    .add(() => animateCounter(`.graph${graphClassPrefix}_head .graph-number`), '<');\n\n  return masterTimeline;\n};\n\n// Graphs Inner Animations\nconst animateGraphRow = (targets, graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n\n  $(targets).each(function (index) {\n    let row = $(this).find(`.graph${graphClassPrefix}_box`);\n    let label = $(this).find(`.graph${graphClassPrefix}_label div`);\n    let number = $(this).find(`.graph${graphClassPrefix}_row-num div`);\n\n    const codeTimeline = gsap.timeline();\n\n    codeTimeline\n      .from(row, { scaleX: 0, duration: 1 })\n      // Show the number element and call animateCounter\n      .add(() => {\n        animateCounter(number);\n      }, '<')\n      .add(letterAnimation(label, 'label'));\n\n    // Stagger animations using the add() method\n    masterTimeline.add(codeTimeline, index * 0.2);\n  });\n\n  return masterTimeline;\n};\n\nconst animateGraphChart = (target) => {\n  let tl = gsap.timeline();\n\n  tl.fromTo(\n    target,\n    {\n      scaleY: 0,\n    },\n    { scaleY: 1, duration: 1 },\n    '<'\n  );\n};\n\n// Graph Types Animations\nexport const animateHorizontalGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(animateGraphRow(target, graphType), '<');\n\n  return tl;\n};\n\nexport const animateChartGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let labelDot = $(trigger).find('.graphd_legend-dot');\n  let chart = $(target).find('.graph-charts');\n\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(letterAnimation(labels, 'label'), '<')\n    .add(animateGraphChart(chart), '<')\n    .fromTo(labelDot, { scale: 0.5, opacity: 0 }, { scale: 1, opacity: 1 }, '<');\n\n  return tl;\n};\n\nexport const animateBoxGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let box = $(target).find('.graphc_item');\n  tl.add(graphHeadAnimation(graphType));\n  tl.fromTo(\n    box,\n    {\n      scale: 0,\n      opacity: 0,\n    },\n    {\n      scale: 1,\n      opacity: 1,\n      stagger: 0.2,\n    }\n  ).add(letterAnimation(labels, 'label'));\n\n  return tl;\n};\n", "// Sets up a carousel given tabs, card, and some functions to run on leave and enter.\n// Only starts the carousel when the first tab scrolls into view.\nexport function tabCarousel({ tabs, cards, onCardLeave, onTabLeave, onCardShow, onTabShow }) {\n  if (tabs.length !== cards.length) {\n    throw new Error(`Cards length: ${cards.length} did not match tabs length: ${tabs.length}`);\n  }\n\n  let hasManuallyClicked = false;\n  let curIdx = 0;\n\n  async function showCard(curIdx) {\n    const prevCardIdx = curIdx === 0 ? cards.length - 1 : curIdx - 1;\n\n    await Promise.all([onCardLeave(cards.eq(prevCardIdx)), onTabLeave(tabs.eq(prevCardIdx))]);\n\n    // Wait until the previous card and tab are hidden before moving to the next one.\n    await Promise.all([onCardShow(cards.eq(curIdx)), onTabShow(tabs.eq(curIdx))]);\n  }\n\n  async function startAnimation() {\n    while (!hasManuallyClicked) {\n      await showCard(curIdx);\n      curIdx += 1;\n      if (curIdx === cards.length) {\n        curIdx = 0;\n      }\n    }\n  }\n\n  tabs.each((idx, tabEl) => {\n    tabEl.onclick = () => {\n      // Don't wait for promises to resolve, do everything simultaneously.\n      onCardLeave(cards.eq(curIdx));\n      onTabLeave(tabs.eq(curIdx));\n      onCardShow(cards.eq(idx));\n      onTabShow(tabs.eq(idx));\n      hasManuallyClicked = true;\n      curIdx = idx;\n    };\n  });\n\n  // Wait for scroll into view before you show the animation\n  const intersectionObserver = new IntersectionObserver(\n    (entries) => {\n      if (entries[0].intersectionRatio <= 0) return;\n      startAnimation();\n      intersectionObserver.unobserve(tabs[0]);\n    },\n    { threshold: 1.0 }\n  );\n  intersectionObserver.observe(tabs[0]);\n}\n\n// Uses swiper to make a carousel. Used as the mobile version of the carousel.\nexport function swiperCarousel({ animateOnSlide, sliderSelector, onInit, duration }) {\n  function handleSwiperSlide({ activeIndex, slides }) {\n    if (slides.length === 0) {\n      return;\n    }\n    animateOnSlide($(slides[activeIndex]));\n  }\n\n  new Swiper(sliderSelector, {\n    slidesPerView: 1,\n    spaceBetween: 24,\n    speed: 250,\n    autoplay: {\n      delay: duration,\n    },\n    observer: true,\n    on: {\n      init: (swiperInstance) => {\n        onInit();\n        handleSwiperSlide(swiperInstance);\n      },\n      transitionEnd: (swiperInstance) => {\n        handleSwiperSlide(swiperInstance);\n      },\n    },\n    pagination: {\n      el: '.swiper-navigation',\n      type: 'bullets',\n      clickable: true,\n      bulletActiveClass: 'w-active',\n      bulletClass: 'w-slider-dot',\n    },\n  });\n}\n", "import { codeAnimation, codeFile, letterAnimation, typeText } from '$utils/globalFunctions';\nimport { swiperCarousel, tabCarousel } from '$utils/tabCarousel';\n\ngsap.registerPlugin(ScrollTrigger);\n\n$(document).ready(function () {\n  // #region Hero Animation\n\n  let activeStage = 0;\n  let stageDelay = 2;\n  let stages = $('[class^=headerb_stage-]');\n  let stepTitles = ['Programmable', 'Perfomant', 'Portable'];\n  let loaded = false;\n\n  // Step 1\n  const heroStep0 = () => {\n    let tl = gsap.timeline({\n      ease: Power0.easeOut,\n      onStart: function () {\n        runOnStart(this);\n      },\n    });\n    let logoBox1 = $('#logo-box_1');\n    let logo1 = logoBox1.find('#logo_1');\n\n    let logoBox2 = $('#logo-box_2');\n    let logo2 = logoBox2.find('#logo_2');\n\n    let logoBox3 = $('#logo-box_3');\n    let logo3 = logoBox3.find('#logo_3');\n\n    let title = $('#title');\n    let versus = $('#vs');\n\n    let mojoBox = $('#mojo-box');\n\n    tl.add(cycleStage(0));\n    tl.fromTo(\n      [logoBox1, logoBox2, logoBox3],\n      { opacity: 0, xPercent: -10 },\n      { opacity: 1, xPercent: 0, stagger: 0.15 }\n    );\n    tl.fromTo(\n      [logo1, logo2, logo3],\n      { opacity: 0, xPercent: -10 },\n      { opacity: 1, xPercent: 0, stagger: 0.15 },\n      '<0.1'\n    );\n    tl.fromTo(title, { opacity: 0 }, { opacity: 1 });\n    tl.fromTo(mojoBox, { opacity: 0, xPercent: -100 }, { opacity: 1, xPercent: 0, duration: 1 });\n    tl.fromTo(versus, { opacity: 0 }, { opacity: 1 });\n\n    return tl;\n  };\n\n  // Step 2\n  const heroStep1 = () => {\n    let ootfBox = $('#ootb_logo');\n    let slowBar1 = $('#bar-slow_1');\n    let slowBar2 = $('#bar-slow_2');\n    let slowBar3 = $('#bar-slow_3');\n\n    let maxLogo = $('#max_logo');\n    let fastBar1 = $('#bar-fast_1');\n    let fastBar2 = $('#bar-fast_2');\n    let fastBar3 = $('#bar-fast_3');\n\n    let header = $('#headers');\n    let numbers = $('#numbers');\n    let grid = $('#grid');\n\n    let tl = gsap.timeline({\n      ease: Power0.easeOut,\n      onStart: function () {\n        runOnStart(this);\n      },\n    });\n\n    // Graph 1\n    tl.add(cycleStage(1));\n    tl.fromTo(\n      [ootfBox, maxLogo],\n      { opacity: 0, xPercent: -15 },\n      { opacity: 1, xPercent: 0, stagger: 0.15 }\n    );\n    tl.fromTo(grid, { scaleY: 0 }, { scaleY: 1 });\n    tl.fromTo([header, numbers], { opacity: 0 }, { opacity: 1, stagger: 0.15 });\n\n    // Slow Bars\n    tl.addLabel('bars-start');\n    tl.fromTo(slowBar3, { scaleX: 0 }, { scaleX: 1 }, 'bars-start');\n    tl.fromTo(slowBar2, { scaleX: 0 }, { scaleX: 0.428 }, '<');\n    tl.fromTo(slowBar1, { scaleX: 0 }, { scaleX: 0.295 }, '<');\n\n    tl.to(slowBar2, { scaleX: 1 });\n    tl.to(slowBar1, { scaleX: 0.695 }, '<');\n\n    tl.to(slowBar1, { scaleX: 1 });\n\n    tl.fromTo(fastBar3, { scaleX: 0 }, { scaleX: 1 }, 'bars-start');\n    tl.fromTo(fastBar2, { scaleX: 0 }, { scaleX: 1 }, '<');\n    tl.fromTo(fastBar1, { scaleX: 0 }, { scaleX: 1 }, '<');\n\n    return tl;\n  };\n\n  // Step 3\n  const heroStep2 = () => {\n    let tl = gsap.timeline({\n      ease: Power0.easeOut,\n      onStart: function () {\n        runOnStart(this);\n      },\n    });\n    tl.add(cycleStage(2));\n    tl.add(() => {}, '+=4');\n\n    return tl;\n  };\n\n  // Main\n  let main = gsap.timeline({\n    repeat: -1,\n    repeatDelay: stageDelay,\n  });\n\n  main.add(heroStep0());\n  main.add(heroStep1(), `+=${stageDelay}`);\n  main.add(heroStep2(), `+=${stageDelay}`);\n\n  // -- Functions\n  function runOnStart(instance) {\n    animateLabel();\n    animateProgressBar(instance._dur);\n    activeStage = (activeStage + 1) % stages.length;\n  }\n\n  function cycleStage(index) {\n    let tl = gsap.timeline();\n\n    tl.to(stages, {\n      opacity: 0,\n    });\n    tl.to(stages.eq(index), { opacity: 1 });\n\n    return tl;\n  }\n  // Header Animations\n  function animateProgressBar(duration) {\n    gsap.fromTo(\n      '.home-anim_progress-bar',\n      { width: '0%' },\n      { width: '100%', ease: 'none', duration: duration + stageDelay }\n    );\n  }\n\n  let activeAnimation = { timeline: null, splitInstance: null };\n\n  function revertLabel() {\n    return new Promise((resolve) => {\n      if (activeAnimation.timeline) {\n        activeAnimation.timeline.reverse().then(() => {\n          // Ensure SplitType changes are reverted after reversing the animation\n          if (activeAnimation.splitInstance && activeAnimation.splitInstance.split.revert) {\n            activeAnimation.splitInstance.split.revert(); // Revert changes made by SplitType\n          }\n          resolve(); // Resolve the promise after reverting\n        });\n      } else {\n        resolve(); // Resolve immediately if there's no animation to revert\n      }\n    });\n  }\n  function animateLabel() {\n    if (loaded) {\n      let parentContainer = document.querySelector('#hero-label');\n      let container = document.createElement('span');\n      container.textContent = `\\u00A0${stepTitles[activeStage]}\\u00A0`;\n      parentContainer.innerHTML = '';\n      parentContainer.appendChild(container);\n\n      // Initialize SplitType for the new content\n      activeAnimation.splitInstance = new SplitType(container, { types: 'chars' });\n      let tl = gsap.timeline();\n\n      // Animate characters appearing\n      $(parentContainer).css({ 'padding-right': '0.2em', 'padding-left': '0.2em' });\n      tl.fromTo(\n        $(activeAnimation.splitInstance.chars),\n        { opacity: 0 },\n        { opacity: 1, ease: 'power2', stagger: 0.04 }\n      );\n\n      // Update the global activeAnimation object\n      activeAnimation.timeline = tl;\n    }\n    loaded = true;\n  }\n\n  // #endregion\n\n  // #region Stats\n  let models = $('.perf_opt-item');\n  let types = $('.perf_opt-type_dropdown-item');\n  let dropdown = $('.perf_opt-type_dropdown');\n  let dropdownMenu = $('.perf_opt-type_dropdown-menu');\n  let dropdownMenuItems = $('.perf_opt-type_dropdown-item');\n  let dropdownOpen = false;\n  let typeIndex = 0;\n\n  // Functions\n  function formatNumber(number) {\n    // Define or replace with appropriate formatting logic\n    return number.toLocaleString('en');\n  }\n  const animateCounter = ($element, value) => {\n    $($element).each(function () {\n      const currentText = $(this).text().trim().replace(/,/g, ''); // Remove commas before parsing\n      const startValue = parseFloat(currentText) || 0; // Fallback to 0 if not a number\n      const targetValue = parseFloat(value);\n\n      if (!isNaN(targetValue) && startValue !== targetValue) {\n        const Cont = { val: startValue }; // Initialize with current value\n\n        // Determine the number of decimal places to animate based on the input and target values\n        const decimalPlaces = Math.max(\n          (startValue.toString().split('.')[1] || '').length,\n          (targetValue.toString().split('.')[1] || '').length\n        );\n\n        const onUpdate = () => {\n          // Use toFixed to control the number of decimal places during the animation\n          let formattedValue = formatNumber(Cont.val.toFixed(decimalPlaces));\n          $(this).text(formattedValue);\n        };\n\n        gsap.fromTo(\n          Cont,\n          { val: startValue },\n          {\n            val: targetValue,\n            duration: 0.7,\n            ease: Power1.easeOut,\n            onUpdate: onUpdate,\n          }\n        );\n      }\n    });\n  };\n  const updateText = ($element, value) => {\n    $($element).each(function () {\n      gsap.to($element, { text: value, duration: 0.5, ease: Power1.easeOut });\n    });\n  };\n\n  /*\u00A0Models */\n  function updateModels(index) {\n    let selectedRadio = $('input[name=\"models\"]:checked').closest(models);\n    selectedRadio = selectedRadio.length ? selectedRadio : models.eq(0);\n    models.removeClass('is-active');\n    selectedRadio.addClass('is-active');\n\n    let name = selectedRadio.find('span').text();\n    let vals1 = selectedRadio.attr('data-values-1').split(', ');\n    let vals2 = selectedRadio.attr('data-values-2').split(', ');\n\n    console.log(index);\n\n    animateCounter($('[data-number=1]'), vals1[index]);\n    animateCounter($('[data-number=2]'), vals2[index]);\n    animateCounter($('[data-label=stats-1]'), vals1[index]);\n    animateCounter($('[data-label=stats-2]'), vals2[index]);\n    updateText($('[data-label=model'), name);\n  }\n\n  /* Type */\n  function updateTypes() {\n    let selectedType = $('input[name=\"type\"]:checked').closest(types);\n    selectedType = selectedType.length ? selectedType : types.eq(0);\n    typeIndex = selectedType.closest('.w-dyn-item').index();\n\n    types.removeClass('is-active');\n    selectedType.addClass('is-active');\n\n    let name = selectedType.find('span').text();\n\n    $('.perf_opt-type_dropdown div:first-child').text(name);\n    $('[data-label=\"type\"]').text(name);\n  }\n\n  /*\u00A0Dropdown */\n  function animateDropdown() {\n    if (dropdownOpen) {\n      gsap.to(dropdownMenu, { height: 0, ease: Power1.easeOut });\n      gsap.to(dropdown.find('.icon-embed-custom1'), { rotate: 0, ease: Power1.easeOut });\n    } else {\n      gsap.to(dropdownMenu, { height: 'auto', ease: Power1.easeOut });\n      gsap.to(dropdown.find('.icon-embed-custom1'), { rotate: 180, ease: Power1.easeOut });\n    }\n  }\n\n  // -- Load\n  gsap.set(dropdownMenu, {\n    height: '0',\n    onComplete: () => {\n      dropdownMenu.show();\n    },\n  });\n  updateModels();\n  updateTypes();\n\n  // -- Logic\n  models.add(types).on('change', () => {\n    updateTypes();\n    updateModels(typeIndex);\n  });\n\n  // Open Click\n  dropdown.on('click', function () {\n    animateDropdown();\n    dropdownOpen = !dropdownOpen;\n  });\n  types.on('change', function () {\n    if (dropdownOpen) {\n      animateDropdown();\n      dropdownOpen = false;\n    }\n  });\n\n  $(document).on('click', function (event) {\n    if (\n      !$(event.target).closest(dropdown).length &&\n      !$(event.target).closest(dropdownMenu).length\n    ) {\n      if (dropdownOpen) {\n        animateDropdown();\n        dropdownOpen = false;\n      }\n    }\n  });\n\n  // #endregion\n\n  // #region Tabs\n\n  // #region Autoplay Tabs\n  const activeClass = 'tab-active';\n  const progressLine = '.tabs_block-progress-line';\n  const fileNameSelector = '.dashboard_head-filename';\n  const tabTimeline = gsap.timeline({ paused: true });\n  const duration = 4000;\n\n  // Animates a card, by typing the text and filename.\n  function cardAnimation(card) {\n    return new Promise((resolve) => {\n      card.show();\n      const fileNameTxt = card.find('.file-name').text();\n      const fileNameEl = card.parent().parent().find(fileNameSelector);\n      fileNameEl.text('');\n      const typeFileNameTimeline = gsap.timeline();\n      typeFileNameTimeline.add(typeText(fileNameEl, fileNameTxt));\n      tabTimeline.add(codeAnimation(card)).add(typeFileNameTimeline, '<');\n      tabTimeline.play();\n      tabTimeline.then(resolve);\n    });\n  }\n\n  // TABS 1\n  tabCarousel({\n    tabs: $('.tabs').eq(0).find('.tabs_block-link-menu .tabs_block-link'),\n    cards: $('.tabs').eq(0).find('.cardb_visual .dashboard_code-block'),\n    onCardLeave: (card) => {\n      card.hide();\n    },\n    onTabLeave: (tab) => {\n      tab.removeClass(activeClass);\n      // If this is called mid animation (by a click) this will stop it.\n      tab.find(progressLine).stop();\n      tab.find(progressLine).css('width', '0');\n    },\n    onCardShow: cardAnimation,\n    onTabShow: (tab) => {\n      return new Promise((resolve) => {\n        tab.addClass(activeClass);\n        tab.find(progressLine).animate({ width: '100%' }, duration, resolve);\n      });\n    },\n  });\n\n  swiperCarousel({\n    sliderSelector: '.tabs_slider._1',\n    // On init and when the swiper slides, we animate the progressbar and code\n    // block, but only animate the code the first time it's shown.\n    animateOnSlide(activeSlide) {\n      // Set progressLine to 0 and then start an animation for it.\n      activeSlide\n        .find(progressLine)\n        .stop(true, true)\n        .css('width', '0')\n        .animate({ width: '100%' }, duration);\n\n      const codeBlock = activeSlide.find('.dashboard_code-block');\n\n      // Run codeAnimation() this function on that child only if it hasn't been animated before\n      if (codeBlock && !codeBlock.hasClass('animated')) {\n        cardAnimation(codeBlock);\n        codeBlock.addClass('animated');\n      }\n    },\n    onInit() {\n      const sliderCodes = $('.tabs_slider').eq(0).find('.cardb_visual .dashboard_code-block');\n      $(sliderCodes).hide();\n    },\n    duration,\n  });\n\n  // #endregion\n\n  // #region Swipers\n  function initSwiper(swiperSelector, mediaQueryString, customConfig) {\n    let swiperInstance;\n    let initStatus = false;\n\n    function handleSwiper() {\n      const mediaQuery = window.matchMedia(mediaQueryString);\n      const shouldInitialize = mediaQuery.matches;\n\n      if (shouldInitialize) {\n        if (!initStatus) {\n          initStatus = true;\n          swiperInstance = new Swiper(swiperSelector, {\n            slidesPerView: 1,\n            spaceBetween: 24,\n            speed: 250,\n            observer: true,\n            touchMoveStopPropagation: false,\n            preventInteractionOnTransition: true,\n            pagination: {\n              el: '.swiper-navigation.latest',\n              type: 'bullets',\n              clickable: true,\n              bulletActiveClass: 'w-active',\n              bulletClass: 'w-slider-dot',\n            },\n            ...customConfig,\n          });\n        }\n      } else {\n        if (initStatus) {\n          if (swiperInstance) {\n            swiperInstance.destroy(true, true);\n          }\n          initStatus = false;\n        }\n      }\n    }\n\n    handleSwiper();\n    window.addEventListener('resize', handleSwiper);\n\n    return handleSwiper;\n  }\n  initSwiper('.latest_slider', '(max-width: 991px)', {});\n  // #endregion\n});\n"],
  "mappings": "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",
  "names": ["element", "curIdx", "duration"]
}
