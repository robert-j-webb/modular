{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/utils/tabCarousel.js", "../src/utils/termynal.js", "../src/homepage.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// -- Text/Code Fuctions\n// Wrap Letters\nexport const wrapLetters = (element) => {\n  const processNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      // Check if the parent node has the \"letter\" class\n      if (!node.parentNode.classList.contains('letter')) {\n        const codeText = node.textContent;\n        const fragment = document.createDocumentFragment();\n\n        for (let i = 0; i < codeText.length; i++) {\n          const span = document.createElement('span');\n          span.className = 'letter';\n          span.textContent = codeText[i];\n          fragment.appendChild(span);\n        }\n\n        node.parentNode.replaceChild(fragment, node);\n      }\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      if (node.tagName !== 'BR') {\n        const childNodes = Array.from(node.childNodes);\n        childNodes.forEach(processNode);\n      }\n    }\n  };\n\n  $(element)\n    .contents()\n    .each(function () {\n      processNode(this);\n    });\n};\n\nconst revealLetters = (elements, letterDelay) => {\n  const codeTimeline = gsap.timeline(); // create a single timeline for all elements and letters\n\n  let globalLetterIndex = 0; // initialize a global letter index\n  // Iterate over each element passed\n  $(elements).each((elementIndex, element) => {\n    const letters = $(element).find('.letter').not('.line-numbers-row .code-letter');\n    const highlights = $(element).find('.word-highlight');\n\n    // Animate each letter in the current element\n    letters.each((letterIndex, letter) => {\n      codeTimeline.fromTo(\n        letter,\n        { visibility: 'hidden' },\n        { visibility: 'initial' },\n        globalLetterIndex * letterDelay,\n        '<'\n      );\n      globalLetterIndex++; // increment the global letter index\n    });\n    if (highlights.length) {\n      const firstHighlight = highlights[0];\n      const currentBgColor = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('background-color');\n      const currentBoxShadow = window\n        .getComputedStyle(firstHighlight)\n        .getPropertyValue('box-shadow');\n\n      const hexToRGBA = (hex, alpha) => {\n        const [r, g, b] = hex.match(/\\w\\w/g).map((x) => parseInt(x, 16));\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n      };\n\n      const rgbaToTransparent = (rgba) => {\n        const rgbaArray = rgba\n          .replace(/^rgba?\\(/, '')\n          .replace(/\\)$/, '')\n          .split(',');\n        return `rgba(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]}, 0)`;\n      };\n\n      const isHex = (color) => /^#(?:[0-9a-f]{3}){1,2}$/i.test(color);\n\n      const initialBackgroundColor = isHex(currentBgColor)\n        ? hexToRGBA(currentBgColor, 0)\n        : rgbaToTransparent(currentBgColor);\n\n      const initialBoxShadow = currentBoxShadow.replace(/rgba?\\([^)]+\\)/g, (match) => {\n        return isHex(match) ? hexToRGBA(match, 0) : rgbaToTransparent(match);\n      });\n\n      Array.from(highlights).forEach((element) => {\n        element.style.backgroundColor = initialBackgroundColor;\n        element.style.boxShadow = initialBoxShadow;\n      });\n\n      codeTimeline.to(\n        highlights,\n        {\n          backgroundColor: currentBgColor,\n          boxShadow: currentBoxShadow,\n          duration: 0.35,\n        },\n        '<'\n      );\n    }\n  });\n  return codeTimeline;\n};\n\n// --- Text Animations\n// Letter Animation\nexport const letterAnimation = (elements, letterType) => {\n  let letterDelay;\n  if (letterType === 'label') {\n    letterDelay = 0.03;\n  } else if (letterType === 'heading') {\n    letterDelay = 0.01;\n  } else if (typeof letterType === 'number') {\n    letterDelay = letterType;\n  } else {\n    letterDelay = 0.01;\n  }\n  wrapLetters(elements);\n  return revealLetters(elements, letterDelay);\n};\n\n// CodeAnimation\nexport const codeAnimation = (className) => {\n  const codeBlock = $(className).find('code');\n  const lineNumbers = codeBlock.find('.line-numbers-rows').eq(0).clone();\n  codeBlock.find('.line-numbers-rows').remove();\n  wrapLetters(codeBlock);\n  codeBlock.prepend(lineNumbers);\n  return revealLetters(codeBlock, 0.01);\n};\n\n// Typewrite\nexport const typeText = (element, text) => {\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  codeTimeline.to(\n    element,\n    {\n      text: { value: text, ease: 'none', speed: 1 },\n    },\n    '<'\n  );\n  return codeTimeline;\n};\n\n// Code Files Change\nexport const codeFile = (element, index) => {\n  let tl = gsap.timeline();\n\n  let text = index === 0 ? 'PY' : '&#x1F525';\n  tl.set(element, { text: text });\n  return tl;\n};\n\n// ---- Graphs\n// Animate Stats\nconst animateCounter = ($element) => {\n  $($element).each(function () {\n    const Cont = { val: 0 };\n    const originalText = $(this).text();\n    const targetValue = parseFloat(originalText);\n    const isOriginalHalf = originalText % 1 >= 0.5 && originalText % 1 < 1;\n\n    if (!isNaN(targetValue)) {\n      // Hide the element before the animation starts\n      $(this).css('visibility', 'hidden');\n      const onUpdate = () => {\n        let formattedValue;\n\n        if (Math.abs(targetValue - Cont.val) <= 0.01) {\n          formattedValue = targetValue % 1 === 0 ? targetValue.toFixed(0) : targetValue.toFixed(2);\n        } else if (Cont.val >= 1) {\n          formattedValue = Math.floor(Cont.val).toFixed(0);\n        } else {\n          formattedValue = Cont.val.toFixed(2);\n        }\n\n        $(this).text(formattedValue);\n      };\n\n      TweenLite.to(Cont, 1, {\n        val: targetValue,\n        onUpdate: onUpdate,\n        onStart: () => $(this).css('visibility', 'visible'),\n      });\n    } else {\n      return;\n    }\n  });\n};\n// Animate Graph Head\nconst graphHeadAnimation = (graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n  masterTimeline\n    .add(letterAnimation(`.graph${graphClassPrefix}_head .text-size-metadata`), 'label')\n    .add(() => animateCounter(`.graph${graphClassPrefix}_head .graph-number`), '<');\n\n  return masterTimeline;\n};\n\n// Graphs Inner Animations\nconst animateGraphRow = (targets, graphClassPrefix) => {\n  const masterTimeline = gsap.timeline();\n\n  $(targets).each(function (index) {\n    let row = $(this).find(`.graph${graphClassPrefix}_box`);\n    let label = $(this).find(`.graph${graphClassPrefix}_label div`);\n    let number = $(this).find(`.graph${graphClassPrefix}_row-num div`);\n\n    const codeTimeline = gsap.timeline();\n\n    codeTimeline\n      .from(row, { scaleX: 0, duration: 1 })\n      // Show the number element and call animateCounter\n      .add(() => {\n        animateCounter(number);\n      }, '<')\n      .add(letterAnimation(label, 'label'));\n\n    // Stagger animations using the add() method\n    masterTimeline.add(codeTimeline, index * 0.2);\n  });\n\n  return masterTimeline;\n};\n\nconst animateGraphChart = (target) => {\n  let tl = gsap.timeline();\n\n  tl.fromTo(\n    target,\n    {\n      scaleY: 0,\n    },\n    { scaleY: 1, duration: 1 },\n    '<'\n  );\n};\n\n// Graph Types Animations\nexport const animateHorizontalGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(animateGraphRow(target, graphType), '<');\n\n  return tl;\n};\n\nexport const animateChartGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let labelDot = $(trigger).find('.graphd_legend-dot');\n  let chart = $(target).find('.graph-charts');\n\n  tl.add(graphHeadAnimation(graphType));\n  tl.add(letterAnimation(labels, 'label'), '<')\n    .add(animateGraphChart(chart), '<')\n    .fromTo(labelDot, { scale: 0.5, opacity: 0 }, { scale: 1, opacity: 1 }, '<');\n\n  return tl;\n};\n\nexport const animateBoxGraph = (target, graphType, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      start: '70% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n\n  let labels = $(target).find('.text-size-label');\n  let box = $(target).find('.graphc_item');\n  tl.add(graphHeadAnimation(graphType));\n  tl.fromTo(\n    box,\n    {\n      scale: 0,\n      opacity: 0,\n    },\n    {\n      scale: 1,\n      opacity: 1,\n      stagger: 0.2,\n    }\n  ).add(letterAnimation(labels, 'label'));\n\n  return tl;\n};\n", "// Sets up a carousel given tabs, card, and some functions to run on leave and enter.\n// Only starts the carousel when the first tab scrolls into view.\nexport function tabCarousel({ tabs, cards, onCardLeave, onTabLeave, onCardShow, onTabShow }) {\n  if (tabs.length !== cards.length) {\n    throw new Error(`Cards length: ${cards.length} did not match tabs length: ${tabs.length}`);\n  }\n\n  let hasManuallyClicked = false;\n  let curIdx = 0;\n\n  async function showCard(curIdx) {\n    const prevCardIdx = curIdx === 0 ? cards.length - 1 : curIdx - 1;\n\n    await Promise.all([onCardLeave(cards.eq(prevCardIdx)), onTabLeave(tabs.eq(prevCardIdx))]);\n\n    // Wait until the previous card and tab are hidden before moving to the next one.\n    await Promise.all([onCardShow(cards.eq(curIdx)), onTabShow(tabs.eq(curIdx))]);\n  }\n\n  async function startAnimation() {\n    while (!hasManuallyClicked) {\n      await showCard(curIdx);\n      curIdx += 1;\n      if (curIdx === cards.length) {\n        curIdx = 0;\n      }\n    }\n  }\n\n  tabs.each((idx, tabEl) => {\n    tabEl.onclick = () => {\n      // Don't wait for promises to resolve, do everything simultaneously.\n      onCardLeave(cards.eq(curIdx));\n      onTabLeave(tabs.eq(curIdx));\n      onCardShow(cards.eq(idx));\n      onTabShow(tabs.eq(idx));\n      hasManuallyClicked = true;\n      curIdx = idx;\n    };\n  });\n\n  // Wait for scroll into view before you show the animation\n  const intersectionObserver = new IntersectionObserver(\n    (entries) => {\n      if (entries[0].intersectionRatio <= 0) return;\n      startAnimation();\n      intersectionObserver.unobserve(tabs[0]);\n    },\n    { threshold: 1.0 }\n  );\n  intersectionObserver.observe(tabs[0]);\n}\n\n// Uses swiper to make a carousel. Used as the mobile version of the carousel.\nexport function swiperCarousel({ animateOnSlide, sliderSelector, onInit, duration }) {\n  function handleSwiperSlide({ activeIndex, slides }) {\n    if (slides.length === 0) {\n      return;\n    }\n    animateOnSlide($(slides[activeIndex]));\n  }\n\n  new Swiper(sliderSelector, {\n    slidesPerView: 1,\n    spaceBetween: 24,\n    speed: 250,\n    autoplay: {\n      delay: duration,\n    },\n    observer: true,\n    on: {\n      init: (swiperInstance) => {\n        onInit();\n        handleSwiperSlide(swiperInstance);\n      },\n      transitionEnd: (swiperInstance) => {\n        handleSwiperSlide(swiperInstance);\n      },\n    },\n    pagination: {\n      el: '.swiper-navigation',\n      type: 'bullets',\n      clickable: true,\n      bulletActiveClass: 'w-active',\n      bulletClass: 'w-slider-dot',\n    },\n  });\n}\n", "// --------- Termynal Code -------- /\nexport class Termynal {\n  /**\n   * Construct the widget's settings.\n   * @param {(string|Node)=} container - Query selector or container element.\n   * @param {Object=} options - Custom settings.\n   * @param {string} options.prefix - Prefix to use for data attributes.\n   * @param {number} options.startDelay - Delay before animation, in ms.\n   * @param {number} options.typeDelay - Delay between each typed character, in ms.\n   * @param {number} options.lineDelay - Delay between each line, in ms.\n   * @param {number} options.progressLength - Number of characters displayed as progress bar.\n   * @param {string} options.progressChar \u2013 Character to use for progress bar, defaults to \u2588.\n   * @param {number} options.progressPercent - Max percent of progress.\n   * @param {string} options.cursor \u2013 Character to use for cursor, defaults to \u258B.\n   * @param {Object[]} lineData - Dynamically loaded line data objects.\n   * @param {boolean} options.noInit - Don't initialise the animation.\n   */\n  constructor(container = '#termynal', options = {}) {\n    this.container = typeof container === 'string' ? document.querySelector(container) : container;\n    this.pfx = `data-${options.prefix || 'ty'}`;\n    this.startDelay =\n      options.startDelay ||\n      parseFloat(this.container.getAttribute(`${this.pfx}-startDelay`)) ||\n      600;\n    this.typeDelay =\n      options.typeDelay || parseFloat(this.container.getAttribute(`${this.pfx}-typeDelay`)) || 90;\n    this.lineDelay =\n      options.lineDelay || parseFloat(this.container.getAttribute(`${this.pfx}-lineDelay`)) || 1500;\n    this.progressLength =\n      options.progressLength ||\n      parseFloat(this.container.getAttribute(`${this.pfx}-progressLength`)) ||\n      40;\n    this.progressChar =\n      options.progressChar || this.container.getAttribute(`${this.pfx}-progressChar`) || '\u2588';\n    this.progressPercent =\n      options.progressPercent ||\n      parseFloat(this.container.getAttribute(`${this.pfx}-progressPercent`)) ||\n      100;\n    this.cursor = options.cursor || this.container.getAttribute(`${this.pfx}-cursor`) || '\u258B';\n    this.lineData = this.lineDataToElements(options.lineData || []);\n    if (!options.noInit) this.init();\n  }\n\n  /**\n   * Initialise the widget, get lines, clear container and start animation.\n   */\n  init() {\n    // Appends dynamically loaded lines to existing line elements.\n    this.lines = [...this.container.querySelectorAll(`[${this.pfx}]`)].concat(this.lineData);\n\n    /**\n     * Calculates width and height of Termynal container.\n     * If container is empty and lines are dynamically loaded, defaults to browser `auto` or CSS.\n     */\n    const containerStyle = getComputedStyle(this.container);\n    this.container.style.width = containerStyle.width !== '0px' ? containerStyle.width : undefined;\n    this.container.style.minHeight =\n      containerStyle.height !== '0px' ? containerStyle.height : undefined;\n\n    this.container.setAttribute('data-termynal', '');\n    this.container.innerHTML = '';\n    this.start();\n  }\n\n  /**\n   * Start the animation and rener the lines depending on their data attributes.\n   */\n  async start() {\n    await this._wait(this.startDelay);\n\n    for (let line of this.lines) {\n      const type = line.getAttribute(this.pfx);\n      const delay = line.getAttribute(`${this.pfx}-delay`) || this.lineDelay;\n\n      if (type === 'input') {\n        line.setAttribute(`${this.pfx}-cursor`, this.cursor);\n        await this.type(line);\n        await this._wait(delay);\n      } else if (type === 'progress') {\n        await this.progress(line);\n        await this._wait(delay);\n      } else {\n        this.container.appendChild(line);\n        await this._wait(delay);\n      }\n\n      line.removeAttribute(`${this.pfx}-cursor`);\n    }\n    this._emitAnimationEndEvent();\n  }\n\n  _emitAnimationEndEvent() {\n    const event = new Event('termynal-anim-end');\n    this.container.dispatchEvent(event);\n  }\n\n  /**\n   * Animate a typed line.\n   * @param {Node} line - The line element to render.\n   */\n  async type(line) {\n    const chars = [...line.textContent];\n    const delay = line.getAttribute(`${this.pfx}-typeDelay`) || this.typeDelay;\n    line.textContent = '';\n    this.container.appendChild(line);\n\n    for (let char of chars) {\n      await this._wait(delay);\n      line.textContent += char;\n    }\n  }\n\n  /**\n   * Animate a progress bar.\n   * @param {Node} line - The line element to render.\n   */\n  async progress(line) {\n    const progressLength = line.getAttribute(`${this.pfx}-progressLength`) || this.progressLength;\n    const progressChar = line.getAttribute(`${this.pfx}-progressChar`) || this.progressChar;\n    const chars = progressChar.repeat(progressLength);\n    const progressPercent =\n      line.getAttribute(`${this.pfx}-progressPercent`) || this.progressPercent;\n    line.textContent = '';\n    this.container.appendChild(line);\n\n    for (let i = 1; i < chars.length + 1; i++) {\n      await this._wait(this.typeDelay);\n      const percent = Math.round((i / chars.length) * 100);\n      line.textContent = `${chars.slice(0, i)} ${percent}%`;\n      if (percent > progressPercent) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Helper function for animation delays, called with `await`.\n   * @param {number} time - Timeout, in ms.\n   */\n  _wait(time) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n\n  /**\n   * Converts line data objects into line elements.\n   *\n   * @param {Object[]} lineData - Dynamically loaded lines.\n   * @param {Object} line - Line data object.\n   * @returns {Element[]} - Array of line elements.\n   */\n  lineDataToElements(lineData) {\n    return lineData.map((line) => {\n      let div = document.createElement('div');\n      div.innerHTML = `<span ${this._attributes(line)}>${line.value || ''}</span>`;\n\n      return div.firstElementChild;\n    });\n  }\n\n  /**\n   * Helper function for generating attributes string.\n   *\n   * @param {Object} line - Line data object.\n   * @returns {string} - String of attributes.\n   */\n  _attributes(line) {\n    let attrs = '';\n    for (let prop in line) {\n      attrs += this.pfx;\n\n      if (prop === 'type') {\n        attrs += `=\"${line[prop]}\" `;\n      } else if (prop !== 'value') {\n        attrs += `-${prop}=\"${line[prop]}\" `;\n      }\n    }\n\n    return attrs;\n  }\n}\n// --------- END Termynal Code -------- //\n", "gsap.registerPlugin(ScrollTrigger);\nimport { animateHorizontalGraph } from '$utils/globalFunctions';\nimport { swiperCarousel, tabCarousel } from '$utils/tabCarousel';\n\nimport { Termynal } from './utils/termynal';\n$(document).ready(function () {\n  // #region Animate Graph\n\n  $('.grapha_row').each(function () {\n    animateHorizontalGraph($(this), 'a', '.grapha');\n  });\n  // #endregion\n\n  // #region Tabs implementation\n\n  const activeClass = 'tab-active';\n  const progressLine = '.tabs_block-progress-line';\n  const duration = 4000;\n\n  // Animates a card, by typing the text and filename.\n  function cardAnimation(card) {\n    return new Promise((resolve) => {\n      card.show();\n      card.css('opacity', '0.0');\n      card.animate({ opacity: '1' }, 200, resolve);\n    });\n  }\n\n  // Initializes the tab carousel for desktop\n  tabCarousel({\n    tabs: $('.tabs_block-link-menu .tabs_block-link'),\n    cards: $('.tabs_visuals > img'),\n    onCardLeave: (card) => {\n      card.hide();\n    },\n    onTabLeave: (tab) => {\n      tab.removeClass(activeClass);\n      // If this is called mid animation (by a click) this will stop it.\n      tab.find(progressLine).stop();\n      tab.find(progressLine).css('width', '0');\n    },\n    onCardShow: cardAnimation,\n    onTabShow: (tab) => {\n      return new Promise((resolve) => {\n        tab.addClass(activeClass);\n        tab.find(progressLine).animate({ width: '100%' }, duration, resolve);\n      });\n    },\n  });\n\n  swiperCarousel({\n    sliderSelector: '.tabs_slider',\n    // On init and when the swiper slides, we animate the progressbar and code\n    // block, but only animate the code the first time it's shown.\n    animateOnSlide(activeSlide) {\n      // Set progressLine to 0 and then start an animation for it.\n      activeSlide\n        .find(progressLine)\n        .stop(true, true)\n        .css('width', '0')\n        .animate({ width: '100%' }, duration);\n    },\n    onInit() {},\n    duration,\n  });\n\n  // #endregion\n\n  // #region Termynal Animation\n  // Define your existing code as a function\n  function runCode() {\n    // Define all Termynal instances on page load\n    termynalsArr.forEach((id) => {\n      defineTermynal(id);\n      initTermynal(id);\n    });\n\n    // Set up infinite loop animation for each Termynal instance\n    Object.values(termynals).forEach((instance) => {\n      restartAnimation(instance);\n    });\n    $(`#mojoCode`).css('visibility', 'visible');\n  }\n\n  // Initialize the Intersection Observer\n  const observer = new IntersectionObserver(\n    (entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          runCode();\n          observer.disconnect();\n        }\n      });\n    },\n    {\n      rootMargin: '0% 0% -50% 0%', // Adjust the values as needed\n    }\n  );\n\n  // Target the element you want to observe (replace with your specific selector)\n  const headerA1CodeElement = document.querySelector('.headera1_code');\n\n  // Start observing the element\n  if (headerA1CodeElement) {\n    observer.observe(headerA1CodeElement);\n  }\n\n  // Terminal Logic\n  let termynalsArr = ['termynal-1'];\n  const termynals = {};\n\n  function defineTermynal(elementID) {\n    console.log(`Defining Termynal for: ${elementID}`);\n    termynals[elementID] = new Termynal(`#${elementID}`, {\n      startDelay: 600,\n      noInit: true,\n    });\n  }\n  function initTermynal(elementID) {\n    if (termynals[elementID]) {\n      termynals[elementID].init();\n      $(`#${elementID}`).css('visibility', 'visible');\n    } else {\n      console.warn(`Termynal instance for ${elementID} not found.`);\n    }\n  }\n  function restartAnimation(termynalInstance) {\n    termynalInstance.container.addEventListener('termynal-anim-end', () => {\n      setTimeout(() => {\n        termynalInstance.init();\n      }, 3000); // (DEFINE THE DELAY BEFORE REINIT);\n    });\n  }\n\n  // #endregion\n\n  // #region Marguee\n  // Marquee Strip\n  function attr(defaultVal, attrVal) {\n    const defaultValType = typeof defaultVal;\n    if (typeof attrVal !== 'string' || attrVal.trim() === '') return defaultVal;\n    if (attrVal === 'true' && defaultValType === 'boolean') return true;\n    if (attrVal === 'false' && defaultValType === 'boolean') return false;\n    if (isNaN(attrVal) && defaultValType === 'string') return attrVal;\n    if (!isNaN(attrVal) && defaultValType === 'number') return +attrVal;\n    return defaultVal;\n  }\n  // marquee component\n  $(document).ready(function () {\n    const initMarquee = () => {\n      if (window.matchMedia('(min-width: 992px)').matches) {\n        $(\"[tr-marquee-element='component']\").each(function () {\n          const componentEl = $(this),\n            panelEl = componentEl.find(\"[tr-marquee-element='panel']\");\n          let speedSetting = attr(100, componentEl.attr('tr-marquee-speed')),\n            verticalSetting = attr(false, componentEl.attr('tr-marquee-vertical')),\n            reverseSetting = attr(false, componentEl.attr('tr-marquee-reverse')),\n            moveDistanceSetting = -100;\n          if (reverseSetting) moveDistanceSetting = 100;\n\n          const updateMarqueePosition = (progress) => {\n            if (verticalSetting) {\n              gsap.set(panelEl, { yPercent: progress * moveDistanceSetting });\n            } else {\n              gsap.set(panelEl, { xPercent: progress * moveDistanceSetting });\n            }\n          };\n\n          const marqueeTimeline = gsap.timeline();\n\n          const scrollTriggerInstance = ScrollTrigger.create({\n            trigger: 'body',\n            start: 'top top',\n            end: 'bottom bottom',\n            onUpdate: (self) => {\n              const scrollProgress = self.progress;\n              updateMarqueePosition(scrollProgress);\n            },\n          });\n\n          // Store ScrollTrigger instance in the component's data\n          componentEl.data('scrollTrigger', scrollTriggerInstance);\n        });\n      } else {\n        $(\"[tr-marquee-element='component']\").each(function () {\n          const componentEl = $(this),\n            panelEl = componentEl.find(\"[tr-marquee-element='panel']\");\n\n          // Retrieve and kill the corresponding ScrollTrigger instance\n          const st = componentEl.data('scrollTrigger');\n          if (st) {\n            st.kill();\n            componentEl.removeData('scrollTrigger');\n          }\n\n          gsap.set(panelEl, { clearProps: 'all' });\n        });\n      }\n    };\n\n    // Run the function on load\n    initMarquee();\n\n    // Run the function on resize\n    $(window).on('resize', initMarquee);\n  });\n  // #endregion\n});\n"],
  "mappings": "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",
  "names": ["element", "curIdx", "observer"]
}
