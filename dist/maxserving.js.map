{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/tabCarousel.js", "../src/maxserving.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Sets up a carousel given tabs, card, and some functions to run on leave and enter.\n// Only starts the carousel when the first tab scrolls into view.\nexport function tabCarousel({ tabs, cards, onCardLeave, onTabLeave, onCardShow, onTabShow }) {\n  if (tabs.length !== cards.length) {\n    throw new Error(`Cards length: ${cards.length} did not match tabs length: ${tabs.length}`);\n  }\n\n  let hasManuallyClicked = false;\n  let curIdx = 0;\n\n  async function showCard(curIdx) {\n    const prevCardIdx = curIdx === 0 ? cards.length - 1 : curIdx - 1;\n\n    await Promise.all([onCardLeave(cards.eq(prevCardIdx)), onTabLeave(tabs.eq(prevCardIdx))]);\n\n    // Wait until the previous card and tab are hidden before moving to the next one.\n    await Promise.all([onCardShow(cards.eq(curIdx)), onTabShow(tabs.eq(curIdx))]);\n  }\n\n  async function startAnimation() {\n    while (!hasManuallyClicked) {\n      await showCard(curIdx);\n      curIdx += 1;\n      if (curIdx === cards.length) {\n        curIdx = 0;\n      }\n    }\n  }\n\n  tabs.each((idx, tabEl) => {\n    tabEl.onclick = () => {\n      // Don't wait for promises to resolve, do everything simultaneously.\n      onCardLeave(cards.eq(curIdx));\n      onTabLeave(tabs.eq(curIdx));\n      onCardShow(cards.eq(idx));\n      onTabShow(tabs.eq(idx));\n      hasManuallyClicked = true;\n      curIdx = idx;\n    };\n  });\n\n  // Wait for scroll into view before you show the animation\n  const intersectionObserver = new IntersectionObserver(\n    (entries) => {\n      if (entries[0].intersectionRatio <= 0) return;\n      startAnimation();\n      intersectionObserver.unobserve(tabs[0]);\n    },\n    { threshold: 1.0 }\n  );\n  intersectionObserver.observe(tabs[0]);\n}\n\n// Uses swiper to make a carousel. Used as the mobile version of the carousel.\nexport function swiperCarousel({ animateOnSlide, sliderSelector, onInit, duration }) {\n  function handleSwiperSlide({ activeIndex, slides }) {\n    if (slides.length === 0) {\n      return;\n    }\n    animateOnSlide($(slides[activeIndex]));\n  }\n\n  new Swiper(sliderSelector, {\n    slidesPerView: 1,\n    spaceBetween: 24,\n    speed: 250,\n    autoplay: {\n      delay: duration,\n    },\n    observer: true,\n    on: {\n      init: (swiperInstance) => {\n        onInit();\n        handleSwiperSlide(swiperInstance);\n      },\n      transitionEnd: (swiperInstance) => {\n        handleSwiperSlide(swiperInstance);\n      },\n    },\n    pagination: {\n      el: '.swiper-navigation',\n      type: 'bullets',\n      clickable: true,\n      bulletActiveClass: 'w-active',\n      bulletClass: 'w-slider-dot',\n    },\n  });\n}\n", "import { codeAnimation, codeFile, letterAnimation, typeText } from '$utils/globalFunctions';\nimport { swiperCarousel, tabCarousel } from '$utils/tabCarousel';\n\n$(document).ready(function () {\n  // #region Tabs implementation\n\n  const activeClass = 'tab-active';\n  const progressLine = '.tabs_block-progress-line';\n  const duration = 4000;\n\n  // Animates a card, by typing the text and filename.\n  function cardAnimation(card) {\n    return new Promise((resolve) => {\n      card.show();\n      card.css('opacity', '0.0');\n      card.animate({ opacity: '1' }, 200, resolve);\n    });\n  }\n\n  // Initializes the tab carousel for desktop\n  tabCarousel({\n    tabs: $('.tabs .tabs_block-link-menu .tabs_block-link'),\n    cards: $('.tabs .tabs_inner'),\n    onCardLeave: (card) => {\n      card.hide();\n    },\n    onTabLeave: (tab) => {\n      tab.removeClass(activeClass);\n      // If this is called mid animation (by a click) this will stop it.\n      tab.find(progressLine).stop();\n      tab.find(progressLine).css('width', '0');\n    },\n    onCardShow: cardAnimation,\n    onTabShow: (tab) => {\n      return new Promise((resolve) => {\n        tab.addClass(activeClass);\n        tab.find(progressLine).animate({ width: '100%' }, duration, resolve);\n      });\n    },\n  });\n\n  swiperCarousel({\n    sliderSelector: '.tabs_slider',\n    // On init and when the swiper slides, we animate the progressbar and code\n    // block, but only animate the code the first time it's shown.\n    animateOnSlide(activeSlide) {\n      // Set progressLine to 0 and then start an animation for it.\n      activeSlide\n        .find(progressLine)\n        .stop(true, true)\n        .css('width', '0')\n        .animate({ width: '100%' }, duration);\n    },\n    onInit() {},\n    duration,\n  });\n\n  // #endregion\n});\n"],
  "mappings": "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",
  "names": ["curIdx"]
}
