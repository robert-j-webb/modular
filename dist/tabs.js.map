{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/tabs.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// -- Text/Code Fuctions\n\n// Wrap Letters\nexport const wrapLetters = (element) => {\n  const processNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      const codeText = node.textContent;\n      const fragment = document.createDocumentFragment();\n\n      for (let i = 0; i < codeText.length; i++) {\n        const span = document.createElement('span');\n        span.className = 'letter';\n        span.textContent = codeText[i];\n        fragment.appendChild(span);\n      }\n\n      node.parentNode.replaceChild(fragment, node);\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      if (node.tagName !== 'BR') {\n        const childNodes = Array.from(node.childNodes);\n        childNodes.forEach(processNode);\n      }\n    }\n  };\n\n  $(element)\n    .contents()\n    .each(function () {\n      processNode(this);\n    });\n};\n\nconst revealLetters = (elements, letterDelay) => {\n  let letters = $(elements).find('.letter').not('.line-numbers-row .code-letter');\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  letters.each((index, element) => {\n    const wordHighlight = $(element).closest('.word-highlight');\n    if (wordHighlight.length) {\n      codeTimeline\n        .fromTo(\n          element,\n          { display: 'none' }, // from value\n          { display: 'inline' }, // to value\n          index * letterDelay,\n          '<' // delay\n        )\n        .to(wordHighlight, { opacity: 1, duration: 0.2 }, '<');\n    } else {\n      codeTimeline.fromTo(\n        element,\n        { visibility: 'hidden' }, // from value\n        { visibility: 'initial' }, // to value\n        index * letterDelay, // delay\n        '<'\n      );\n    }\n  });\n  return codeTimeline;\n};\n\n// --- Text Animations\n// Letter Animation\nexport const letterAnimation = (elements, letterType) => {\n  let letterDelay;\n  if (letterType === 'label') {\n    letterDelay = 0.03;\n  } else if (letterType === 'heading') {\n    letterDelay = 0.02;\n  } else if (typeof letterType === 'number') {\n    letterDelay = letterType;\n  } else {\n    letterDelay = 0.01;\n  }\n  wrapLetters(elements);\n  return revealLetters(elements, letterDelay);\n};\n\n// CodeAnimation\nexport const codeAnimation = (className) => {\n  const codeBlock = $(className).find('code');\n  const lineNumbers = codeBlock.find('.line-numbers-rows').eq(0).clone();\n  codeBlock.find('.line-numbers-rows').remove();\n  wrapLetters(codeBlock);\n  codeBlock.prepend(lineNumbers);\n  return revealLetters(codeBlock, 0.01);\n};\n\n// Typewrite\nexport const typeText = (element, text) => {\n  const codeTimeline = gsap.timeline(); // create a child timeline based on the defaults\n  codeTimeline.to(\n    element,\n    {\n      text: { value: text, ease: 'none', speed: 1 },\n    },\n    '<'\n  );\n  return codeTimeline;\n};\n\n// ---- Graphs\n// Animate Stats\nexport const animateCounter = ($element) => {\n  const Cont = { val: 0 };\n  const targetValue = parseFloat($element.text());\n\n  const onUpdate = () => {\n    const formattedValue = Cont.val % 1 === 0 ? Cont.val.toFixed(0) : Cont.val.toFixed(1);\n    $element.text(formattedValue);\n  };\n\n  TweenLite.to(Cont, 1, {\n    val: targetValue,\n    onUpdate: onUpdate,\n  });\n};\n\nexport const animateGraphRow = (targets) => {\n  const masterTimeline = gsap.timeline();\n\n  $(targets).each(function (index) {\n    let row = $(this).find('.grapha_box');\n    let label = $(this).find('.grapha_label div');\n    let number = $(this).find('.grapha_row-num div');\n\n    const codeTimeline = gsap.timeline();\n\n    codeTimeline\n      .from(row, { scaleX: 0, duration: 1 })\n      .add(letterAnimation(label, 'label'))\n      .add(animateCounter(number));\n\n    // Stagger animations using the add() method\n    masterTimeline.add(codeTimeline, index * 0.2);\n  });\n\n  return masterTimeline;\n};\n\nexport const animateHorizontalGraph = (target, trigger) => {\n  let triggerElement = $(trigger);\n  let tl = gsap.timeline({\n    ease: Power2.easeOut,\n    paused: true,\n    scrollTrigger: {\n      trigger: triggerElement,\n      // trigger element - viewport\n      start: '50% bottom',\n      onEnter: () => {\n        // Play the timeline when the trigger element enters the viewport\n        tl.play();\n      },\n    },\n  });\n  // Add the animation to the timeline\n  tl.add(animateGraphRow(target));\n\n  return tl;\n};\n", "import { codeAnimation } from '$utils/globalFunctions';\n\n// Tabs\nconst responsive = '(min-width: 992px)';\nlet isInitialized = false;\n\nconst tabLinks = $('.tabs_block-link-menu .tabs_block-link');\nconst tabCodes = $('.tabs .cardb_visual .dashboard_code-block');\nconst activeClass = 'tab-active';\nconst progressLine = $('.tabs_block-progress-line');\nconst duration = 4000;\n\nlet shouldAnimate = true;\n\nfunction switchTab() {\n  if (!shouldAnimate) {\n    return;\n  }\n  const currentTab = tabLinks.filter('.' + activeClass);\n  currentTab.find(progressLine).animate({ width: '100%' }, duration, function () {\n    // Reset\n    resetTabs();\n\n    // Add\n    const currentIndex = currentTab.index();\n    let nextIndex = currentIndex >= tabLinks.length - 1 ? 0 : currentIndex + 1;\n\n    // Ensure that the nextIndex is not the same as the currentIndex\n    if (nextIndex === currentIndex) {\n      nextIndex = currentIndex >= tabLinks.length - 2 ? 0 : currentIndex + 2;\n    }\n\n    tabLinks.eq(nextIndex).addClass(activeClass);\n    showCode(nextIndex);\n    switchTab();\n  });\n}\n\nconst resetTabs = () => {\n  tabLinks.removeClass(activeClass);\n  progressLine.css('width', '0');\n  tabCodes.hide();\n};\n\nconst stopAnimation = () => {\n  shouldAnimate = false;\n  tabLinks.find(progressLine).stop(true, true); // stop the animation immediately\n  resetTabs();\n};\n\nconst showCode = (nextIndex) => {\n  tabCodes.eq(nextIndex).show();\n  codeAnimation(tabCodes.eq(nextIndex));\n};\n\nconst initTabs = () => {\n  isInitialized = true;\n  tabLinks.eq(0).addClass(activeClass);\n\n  // Start looped animation\n  switchTab();\n\n  // User Click\n  tabLinks.on('click', function () {\n    const nextIndex = $(this).index();\n    stopAnimation();\n    $(this).addClass(activeClass);\n    $(this).find(progressLine).animate({ width: '100%' }, 200);\n    showCode(nextIndex);\n  });\n};\n\n$(window).on('load resize', function () {\n  if (window.matchMedia(responsive).matches) {\n    if (!isInitialized) {\n      // Define a ScrollTrigger for the .tabs element\n      const trigger = ScrollTrigger.create({\n        trigger: '.tabs',\n        start: 'top center',\n        onEnter: () => {\n          initTabs();\n          trigger.kill(); // Remove the ScrollTrigger once the function has been called\n        },\n      });\n    }\n  } else {\n    if (isInitialized) {\n      stopAnimation();\n      isInitialized = false;\n    }\n  }\n});\n\n/* Swiper\n **************************************************************/\nlet swiper;\nlet init = false;\nconst sliderCodes = $('.tabs_slider .cardb_visual .hero-dashboard_code-block');\n\n/* Which media query\n **************************************************************/\nfunction swiperMode() {\n  const mobile = window.matchMedia('(min-width: 0px) and (max-width: 991px)');\n  const desktop = window.matchMedia(responsive);\n\n  function handleSwiperSlide(swiperInstance) {\n    // Get Active Index\n    const { activeIndex } = swiperInstance;\n\n    // Run ProgressBar\n    progressLine.stop(true, true);\n    progressLine.css('width', '0');\n    $(swiperInstance.slides[activeIndex]).find(progressLine).animate({ width: '100%' }, duration);\n\n    // Find child \".hero-dashboard_code-block\"\n    const codeBlock = swiperInstance.slides[activeIndex].querySelector(\n      '.hero-dashboard_code-block'\n    );\n\n    // Run codeAnimation() this function on that child\n    if (codeBlock) {\n      $(codeBlock).show();\n      codeAnimation(codeBlock);\n    }\n  }\n\n  // Enable (for desktop)\n  if (desktop.matches) {\n    if (init) {\n      swiper.destroy(true, true);\n      init = false;\n    }\n  }\n\n  // Disable (for desktop)\n  else if (mobile.matches) {\n    if (!init) {\n      init = true;\n      swiper = new Swiper('.tabs_slider', {\n        // Optional parameters\n        slidesPerView: 1,\n        spaceBetween: 24,\n        speed: 250,\n        autoplay: {\n          delay: duration,\n        },\n        observer: true,\n        on: {\n          init: (swiperInstance) => {\n            handleSwiperSlide(swiperInstance);\n          },\n          slideChange: () => {\n            $(sliderCodes).hide();\n          },\n          transitionEnd: (swiperInstance) => {\n            handleSwiperSlide(swiperInstance);\n          },\n        },\n        // Enable lazy loading\n        pagination: {\n          el: '.swiper-navigation',\n          type: 'bullets',\n          clickable: true,\n          bulletActiveClass: 'w-active',\n          bulletClass: 'w-slider-dot',\n        },\n      });\n    }\n  }\n}\n\n/* On Load\n **************************************************************/\nwindow.addEventListener('load', function () {\n  swiperMode();\n});\n\n/* On Resize\n **************************************************************/\nwindow.addEventListener('resize', function () {\n  swiperMode();\n});\n"],
  "mappings": "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",
  "names": []
}
