{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/performance.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import { codeAnimation, codeFile, letterAnimation, typeText } from '$utils/globalFunctions';\nimport { swiperCarousel, tabCarousel } from '$utils/tabCarousel';\n\ngsap.registerPlugin(ScrollTrigger);\n\n$(document).ready(function () {\n  //#region HeroAnimtion\n  // Step 2\n  const heroStep1 = () => {\n    let ootfBox = $('#ootb_logo');\n    let slowBar1 = $('#bar-slow_1');\n    let slowBar2 = $('#bar-slow_2');\n    let slowBar3 = $('#bar-slow_3');\n\n    let maxLogo = $('#max_logo');\n    let fastBar1 = $('#bar-fast_1');\n    let fastBar2 = $('#bar-fast_2');\n    let fastBar3 = $('#bar-fast_3');\n\n    let header = $('#headers');\n    let numbers = $('#numbers');\n    let grid = $('#grid');\n\n    let barsDuration = 0.7;\n\n    let tl = gsap.timeline({\n      defaults: {\n        ease: Power2.easeOut,\n      },\n    });\n\n    // Graph 1\n    tl.to($('.headerb_stage-2'), { opacity: 1 });\n    tl.fromTo(\n      [ootfBox, maxLogo, header, numbers],\n      { opacity: 0, xPercent: -15 },\n      { opacity: 1, xPercent: 0, duration: 0.5 }\n    );\n    tl.fromTo(grid, { scaleY: 0 }, { scaleY: 1, duration: 0.5 }, '<');\n\n    // Slow Bars\n    tl.addLabel('bars-start', '<0.2');\n    tl.fromTo(slowBar3, { scaleX: 0 }, { scaleX: 1, duration: barsDuration }, 'bars-start');\n    tl.fromTo(slowBar2, { scaleX: 0 }, { scaleX: 0.428, duration: barsDuration }, '<');\n    tl.fromTo(slowBar1, { scaleX: 0 }, { scaleX: 0.295, duration: barsDuration }, '<');\n\n    tl.to(slowBar2, { scaleX: 1, duration: barsDuration });\n    tl.to(slowBar1, { scaleX: 0.695, duration: barsDuration }, '<');\n\n    tl.to(slowBar1, { scaleX: 1, duration: barsDuration });\n\n    tl.fromTo(fastBar3, { scaleX: 0 }, { scaleX: 1, duration: barsDuration }, 'bars-start');\n    tl.fromTo(fastBar2, { scaleX: 0 }, { scaleX: 1, duration: barsDuration }, '<');\n    tl.fromTo(fastBar1, { scaleX: 0 }, { scaleX: 1, duration: barsDuration }, '<');\n\n    return tl;\n  };\n\n  // Main\n  let main = gsap.timeline({});\n\n  main.add(heroStep1());\n  //#endregion\n\n  // #region Performance\n  const mask = '.perf2_model-mask';\n  let swiper1, swiper2;\n\n  // ____ Helping Functions\n  function formatNumber(number) {\n    return number.toLocaleString('en');\n  }\n\n  const animateCounter = ($element, value) => {\n    $($element).each(function () {\n      const currentText = $(this).text().trim().replace(/,/g, ''); // Remove commas before parsing\n      const startValue = parseFloat(currentText) || 0; // Fallback to 0 if not a number\n      const targetValue = parseFloat(value);\n      console.log(targetValue);\n\n      if (!isNaN(targetValue) && startValue !== targetValue) {\n        const Cont = { val: startValue }; // Initialize with current value\n\n        // Determine the number of decimal places to animate based on the input and target values\n        const decimalPlaces = 1;\n\n        console.log(decimalPlaces);\n\n        const onUpdate = () => {\n          // Use toFixed to control the number of decimal places during the animation,\n          // then parseFloat to remove unnecessary trailing zeros.\n          let formattedValue = formatNumber(parseFloat(Cont.val.toFixed(decimalPlaces)));\n          $(this).text(formattedValue);\n        };\n\n        gsap.fromTo(\n          Cont,\n          { val: startValue },\n          {\n            val: targetValue,\n            duration: 0.7,\n            ease: Power1.easeOut,\n            onUpdate: onUpdate,\n          }\n        );\n      }\n    });\n  };\n\n  const updateText = ($element, value) => {\n    $($element).each(function () {\n      gsap.to($element, { text: value, duration: 0.5, ease: Power1.easeOut });\n    });\n  };\n\n  // Toggling the full name paragraph\n  function toggleNames(swiper, toggle) {\n    let { activeIndex, slides } = swiper;\n    let activeItem = slides[activeIndex];\n\n    const revealName = (item) => {\n      let target = $(item).find(mask);\n      let fullHeight = target.find('p').outerHeight(); // Get the full height\n      gsap.to(target, {\n        height: fullHeight,\n      });\n    };\n\n    const tl = gsap.timeline({\n      // Trigger reveal after hiding all\n      onComplete: () => {\n        if (toggle) {\n          revealName(activeItem);\n        }\n      },\n    });\n\n    // Hide all\n    slides.forEach((element) => {\n      tl.to(\n        $(element).find(mask),\n        {\n          height: 0,\n          duration: 0.2,\n        },\n        '<'\n      );\n    });\n  }\n\n  // Logic for updatig correct stats\n  function updateStats(allSwipers) {\n    let activeModelIndex = allSwipers.swiper1.realIndex;\n\n    let activeModel = $(allSwipers.swiper1.slides[activeModelIndex]);\n\n    // Stats el\n    let statNumberEl = $('[stat-number]');\n    let modelNameEl = $('[model-name-full]');\n    let instaceNameEl = $('[instance-name-full]');\n\n    // Data El\n    let instanceTitles = $('.perf2_slider-2 .perf2_model-mask p');\n\n    // Data\n    let instanceNames = [\n      $('[data-instance-1-short]').text(),\n      $('[data-instance-2-short]').text(),\n      $('[data-instance-3-short]').text(),\n    ];\n\n    let modelName = activeModel.find('[data-model-full]').text();\n    let instances = [\n      activeModel.attr('data-instance-1-full'),\n      activeModel.attr('data-instance-2-full'),\n      activeModel.attr('data-instance-3-full'),\n    ];\n\n    let performances = [\n      activeModel.attr('data-performance-1-val'),\n      activeModel.attr('data-performance-2-val'),\n      activeModel.attr('data-performance-3-val'),\n    ];\n\n    // Check realIndex of both swipers\n    let instanceIndex = allSwipers.swiper2.realIndex;\n\n    // Stats\n    instanceTitles.each(function () {\n      let index = $(this).index();\n      updateText($(this), instances[index]);\n    });\n\n    animateCounter(statNumberEl, performances[instanceIndex]);\n    updateText(modelNameEl, modelName);\n    updateText(instaceNameEl, instanceNames[instanceIndex] + ' ' + instances[instanceIndex]);\n  }\n\n  // Swiper instances\n  let swipers = {\n    swiper1: initializeSwiper('.perf2_slider-1', {\n      initialSlide: 5,\n    }),\n    swiper2: initializeSwiper('.perf2_slider-2'),\n  };\n\n  // Swiper Logic\n  function initializeSwiper(selector, options) {\n    return new Swiper(selector, {\n      slidesPerView: 1,\n      direction: 'vertical',\n      observer: true,\n      slideToClickedSlide: true,\n      init: false,\n      threshold: 40,\n      freeMode: {\n        enabled: true,\n        sticky: true,\n      },\n      on: {\n        init: function () {\n          toggleNames(this, true);\n        },\n      },\n      mousewheel: {\n        thresholdDelta: 20,\n      },\n      ...options,\n    });\n  }\n\n  // Custom Events\n  for (let key in swipers) {\n    if (swipers.hasOwnProperty(key)) {\n      let swiper = swipers[key];\n\n      let debounceTimer;\n\n      swiper.on('init', function () {\n        updateStats(swipers);\n      });\n      swiper.on('slideChange', function () {\n        clearTimeout(debounceTimer);\n        debounceTimer = setTimeout(() => {\n          toggleNames(this, true);\n          updateStats(swipers);\n        }, 300);\n      });\n\n      swiper.init();\n    }\n  }\n\n  //#endregion\n});\n"],
  "mappings": "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",
  "names": []
}
